<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDomainModel.Description" xml:space="preserve">
    <value>Entity Framework visual editor for EF6, EFCore and beyond.</value>
    <comment>Description for DslLibrary &apos;EFModel&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDomainModel.DisplayName" xml:space="preserve">
    <value>Entity Framework Visual Editor</value>
    <comment>DisplayName for DslLibrary &apos;EFModel&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot.DisplayName" xml:space="preserve">
    <value>Entity Model</value>
    <comment>DisplayName for DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Description" xml:space="preserve">
    <value>If true, entity container will use lazy loading</value>
    <comment>Description for DomainProperty &apos;LazyLoadingEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.DisplayName" xml:space="preserve">
    <value>Lazy Loading Enabled</value>
    <comment>DisplayName for DomainProperty &apos;LazyLoadingEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/LazyLoadingEnabled.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;LazyLoadingEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Description" xml:space="preserve">
    <value>Code visibility for entity container</value>
    <comment>Description for DomainProperty &apos;EntityContainerAccess&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.DisplayName" xml:space="preserve">
    <value>Entity Container Access</value>
    <comment>DisplayName for DomainProperty &apos;EntityContainerAccess&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerAccess.Category" xml:space="preserve">
    <value>Entity Context</value>
    <comment>Category for DomainProperty &apos;EntityContainerAccess&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Description" xml:space="preserve">
    <value>Name of entity container class</value>
    <comment>Description for DomainProperty &apos;EntityContainerName&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.DisplayName" xml:space="preserve">
    <value>Entity Container Name</value>
    <comment>DisplayName for DomainProperty &apos;EntityContainerName&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityContainerName.Category" xml:space="preserve">
    <value>Entity Context</value>
    <comment>Category for DomainProperty &apos;EntityContainerName&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Description" xml:space="preserve">
    <value>Namespace for DBContext and, unless otherwise specified, all other generated code</value>
    <comment>Description for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.DisplayName" xml:space="preserve">
    <value>DbContext Namespace</value>
    <comment>DisplayName for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Namespace.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Description" xml:space="preserve">
    <value>Initialization strategy to synchronize the underlying database when an instance of this context is used for the first time</value>
    <comment>Description for DomainProperty &apos;DatabaseInitializerType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.DisplayName" xml:space="preserve">
    <value>Database Initializer Type</value>
    <comment>DisplayName for DomainProperty &apos;DatabaseInitializerType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseInitializerType.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;DatabaseInitializerType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Description" xml:space="preserve">
    <value>Connection string to use. Mutually exclusive with ConnectionStringName</value>
    <comment>Description for DomainProperty &apos;ConnectionString&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.DisplayName" xml:space="preserve">
    <value>Connection String</value>
    <comment>DisplayName for DomainProperty &apos;ConnectionString&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionString.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ConnectionString&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Description" xml:space="preserve">
    <value>If true, automatic database migrations will be run when changes are detected.</value>
    <comment>Description for DomainProperty &apos;AutomaticMigrationsEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.DisplayName" xml:space="preserve">
    <value>Automatic Migrations Enabled</value>
    <comment>DisplayName for DomainProperty &apos;AutomaticMigrationsEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/AutomaticMigrationsEnabled.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;AutomaticMigrationsEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Description" xml:space="preserve">
    <value>Output directory for entities</value>
    <comment>Description for DomainProperty &apos;EntityOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.DisplayName" xml:space="preserve">
    <value>Output Directory - Entities</value>
    <comment>DisplayName for DomainProperty &apos;EntityOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityOutputDirectory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EntityOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Description" xml:space="preserve">
    <value>Project directory for DbContext-related files</value>
    <comment>Description for DomainProperty &apos;ContextOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.DisplayName" xml:space="preserve">
    <value>Output Directory - DbContext</value>
    <comment>DisplayName for DomainProperty &apos;ContextOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ContextOutputDirectory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ContextOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Description" xml:space="preserve">
    <value>Project directory for enums</value>
    <comment>Description for DomainProperty &apos;EnumOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.DisplayName" xml:space="preserve">
    <value>Output Directory - Enums</value>
    <comment>DisplayName for DomainProperty &apos;EnumOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EnumOutputDirectory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EnumOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Description" xml:space="preserve">
    <value>The schema to use for table creation</value>
    <comment>Description for DomainProperty &apos;DatabaseSchema&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.DisplayName" xml:space="preserve">
    <value>Database Schema Name</value>
    <comment>DisplayName for DomainProperty &apos;DatabaseSchema&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseSchema.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;DatabaseSchema&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Description" xml:space="preserve">
    <value>Default concurrency handling strategy</value>
    <comment>Description for DomainProperty &apos;ConcurrencyDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.DisplayName" xml:space="preserve">
    <value>Concurrency Default</value>
    <comment>DisplayName for DomainProperty &apos;ConcurrencyDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConcurrencyDefault.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ConcurrencyDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Description" xml:space="preserve">
    <value>File name suffix for generated files (e.g., foo.generated.cs)</value>
    <comment>Description for DomainProperty &apos;FileNameMarker&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.DisplayName" xml:space="preserve">
    <value>File Name Marker</value>
    <comment>DisplayName for DomainProperty &apos;FileNameMarker&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/FileNameMarker.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;FileNameMarker&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Description" xml:space="preserve">
    <value>Version of Entity Framework for validation and generated code</value>
    <comment>Description for DomainProperty &apos;EntityFrameworkVersion&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.DisplayName" xml:space="preserve">
    <value>Entity Framework Version</value>
    <comment>DisplayName for DomainProperty &apos;EntityFrameworkVersion&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkVersion.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EntityFrameworkVersion&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Description" xml:space="preserve">
    <value>Name of connection string in config file. Mutually exclusive with ConnectionString</value>
    <comment>Description for DomainProperty &apos;ConnectionStringName&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.DisplayName" xml:space="preserve">
    <value>Connection String Name</value>
    <comment>DisplayName for DomainProperty &apos;ConnectionStringName&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ConnectionStringName.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ConnectionStringName&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Description" xml:space="preserve">
    <value>Will chop generated code method chains</value>
    <comment>Description for DomainProperty &apos;ChopMethodChains&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.DisplayName" xml:space="preserve">
    <value>Chop Method Chains</value>
    <comment>DisplayName for DomainProperty &apos;ChopMethodChains&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ChopMethodChains.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ChopMethodChains&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Description" xml:space="preserve">
    <value>How tables will be created and used to handle inheritance</value>
    <comment>Description for DomainProperty &apos;InheritanceStrategy&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.DisplayName" xml:space="preserve">
    <value>Inheritance Strategy</value>
    <comment>DisplayName for DomainProperty &apos;InheritanceStrategy&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/InheritanceStrategy.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;InheritanceStrategy&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Description" xml:space="preserve">
    <value>The type of container generated to represent associations if not overridden. Must implement ICollection&lt;T&gt;.</value>
    <comment>Description for DomainProperty &apos;DefaultCollectionClass&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.DisplayName" xml:space="preserve">
    <value>Default Collection Class</value>
    <comment>DisplayName for DomainProperty &apos;DefaultCollectionClass&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultCollectionClass.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;DefaultCollectionClass&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Description" xml:space="preserve">
    <value>If true, context will generate proxies for POCO entities</value>
    <comment>Description for DomainProperty &apos;ProxyGenerationEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.DisplayName" xml:space="preserve">
    <value>Proxy Generation Enabled</value>
    <comment>DisplayName for DomainProperty &apos;ProxyGenerationEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ProxyGenerationEnabled.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ProxyGenerationEnabled&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Description" xml:space="preserve">
    <value>If true, will trigger code generation when the file is saved. If false, code generation will have to be triggered manually.</value>
    <comment>Description for DomainProperty &apos;TransformOnSave&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.DisplayName" xml:space="preserve">
    <value>Generate Code on Save</value>
    <comment>DisplayName for DomainProperty &apos;TransformOnSave&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/TransformOnSave.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;TransformOnSave&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Description" xml:space="preserve">
    <value>Default type for ID properties in new classes</value>
    <comment>Description for DomainProperty &apos;DefaultIdentityType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.DisplayName" xml:space="preserve">
    <value>Default Identity Type</value>
    <comment>DisplayName for DomainProperty &apos;DefaultIdentityType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DefaultIdentityType.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;DefaultIdentityType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Description" xml:space="preserve">
    <value>If true, will display cascade deleted associations as dashed red lines</value>
    <comment>Description for DomainProperty &apos;ShowCascadeDeletes&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.DisplayName" xml:space="preserve">
    <value>Show Cascade Deletes</value>
    <comment>DisplayName for DomainProperty &apos;ShowCascadeDeletes&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowCascadeDeletes.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;ShowCascadeDeletes&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.Description" xml:space="preserve">
    <value>Database manifest token. Optimization if runtime database type is known and unchanging, and only valid for SqlServer.</value>
    <comment>Description for DomainProperty &apos;DatabaseType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseType.DisplayName" xml:space="preserve">
    <value>SqlServer Type</value>
    <comment>DisplayName for DomainProperty &apos;DatabaseType&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Description" xml:space="preserve">
    <value>If true, will generate warnings when summary documentation is missing</value>
    <comment>Description for DomainProperty &apos;WarnOnMissingDocumentation&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.DisplayName" xml:space="preserve">
    <value>Warn On Missing Documentation</value>
    <comment>DisplayName for DomainProperty &apos;WarnOnMissingDocumentation&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/WarnOnMissingDocumentation.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;WarnOnMissingDocumentation&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Description" xml:space="preserve">
    <value>Version of Entity Framework code for validation and generated code</value>
    <comment>Description for DomainProperty &apos;EntityFrameworkPackageVersion&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.DisplayName" xml:space="preserve">
    <value>Entity Framework Package Version</value>
    <comment>DisplayName for DomainProperty &apos;EntityFrameworkPackageVersion&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityFrameworkPackageVersion.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EntityFrameworkPackageVersion&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Description" xml:space="preserve">
    <value>Project directory for generated structures (owned/complex types)</value>
    <comment>Description for DomainProperty &apos;StructOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.DisplayName" xml:space="preserve">
    <value>Output Directory - Structs</value>
    <comment>DisplayName for DomainProperty &apos;StructOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/StructOutputDirectory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;StructOutputDirectory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Description" xml:space="preserve">
    <value>Code visibility for DbSets</value>
    <comment>Description for DomainProperty &apos;DbSetAccess&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.DisplayName" xml:space="preserve">
    <value>DbSet Access</value>
    <comment>DisplayName for DomainProperty &apos;DbSetAccess&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DbSetAccess.Category" xml:space="preserve">
    <value>Entity Context</value>
    <comment>Category for DomainProperty &apos;DbSetAccess&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Description" xml:space="preserve">
    <value>Detailed code documentation</value>
    <comment>Description for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Description.DisplayName" xml:space="preserve">
    <value>Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Description.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Description" xml:space="preserve">
    <value>Brief code documentation</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.DisplayName" xml:space="preserve">
    <value>Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Description" xml:space="preserve">
    <value>If true, will display warning glyphs with tooltips when model elements have non-fatal issues detected</value>
    <comment>Description for DomainProperty &apos;ShowWarningsInDesigner&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.DisplayName" xml:space="preserve">
    <value>Show Warnings In Designer</value>
    <comment>DisplayName for DomainProperty &apos;ShowWarningsInDesigner&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowWarningsInDesigner.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;ShowWarningsInDesigner&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityNamespace.Description" xml:space="preserve">
    <value>Namespace for entities</value>
    <comment>Description for DomainProperty &apos;EntityNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityNamespace.DisplayName" xml:space="preserve">
    <value>Entity Namespace</value>
    <comment>DisplayName for DomainProperty &apos;EntityNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityNamespace.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EntityNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EnumNamespace.Description" xml:space="preserve">
    <value>Namespace for enumerations</value>
    <comment>Description for DomainProperty &apos;EnumNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EnumNamespace.DisplayName" xml:space="preserve">
    <value>Enum Namespace</value>
    <comment>DisplayName for DomainProperty &apos;EnumNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EnumNamespace.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EnumNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/StructNamespace.Description" xml:space="preserve">
    <value>Namespace for owned entities</value>
    <comment>Description for DomainProperty &apos;StructNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/StructNamespace.DisplayName" xml:space="preserve">
    <value>Struct Namespace</value>
    <comment>DisplayName for DomainProperty &apos;StructNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/StructNamespace.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;StructNamespace&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Namespaces.Description" xml:space="preserve">
    <value>Default namespaces for generated code</value>
    <comment>Description for DomainProperty &apos;Namespaces&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Namespaces.DisplayName" xml:space="preserve">
    <value>Namespaces</value>
    <comment>DisplayName for DomainProperty &apos;Namespaces&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/Namespaces.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Namespaces&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/OutputLocations.Description" xml:space="preserve">
    <value>Default output folders for generated code</value>
    <comment>Description for DomainProperty &apos;OutputLocations&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/OutputLocations.DisplayName" xml:space="preserve">
    <value>Output Locations</value>
    <comment>DisplayName for DomainProperty &apos;OutputLocations&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/OutputLocations.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;OutputLocations&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ExposeForeignKeys.Description" xml:space="preserve">
    <value>Allow foreign key properties to be available in the POCO entities (recommended: false)</value>
    <comment>Description for DomainProperty &apos;ExposeForeignKeys&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ExposeForeignKeys.DisplayName" xml:space="preserve">
    <value>Allow Modeled Foreign Keys</value>
    <comment>DisplayName for DomainProperty &apos;ExposeForeignKeys&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ExposeForeignKeys.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ExposeForeignKeys&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/BaseClass.Description" xml:space="preserve">
    <value>Base class for DbContext in generated code. Should be fully qualified if not in a standard namespace.</value>
    <comment>Description for DomainProperty &apos;BaseClass&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/BaseClass.DisplayName" xml:space="preserve">
    <value>Context Base Class</value>
    <comment>DisplayName for DomainProperty &apos;BaseClass&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/BaseClass.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;BaseClass&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowGrid.Description" xml:space="preserve">
    <value>If true, displays a grid for aligning shapes</value>
    <comment>Description for DomainProperty &apos;ShowGrid&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowGrid.DisplayName" xml:space="preserve">
    <value>Show Grid</value>
    <comment>DisplayName for DomainProperty &apos;ShowGrid&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowGrid.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;ShowGrid&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/SnapToGrid.Description" xml:space="preserve">
    <value>If true, shapes snap to the designer&apos;s grid</value>
    <comment>Description for DomainProperty &apos;SnapToGrid&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/SnapToGrid.DisplayName" xml:space="preserve">
    <value>Snap To Grid</value>
    <comment>DisplayName for DomainProperty &apos;SnapToGrid&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/SnapToGrid.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;SnapToGrid&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GridColor.Description" xml:space="preserve">
    <value>Color for designer grid</value>
    <comment>Description for DomainProperty &apos;GridColor&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GridColor.DisplayName" xml:space="preserve">
    <value>Grid Color</value>
    <comment>DisplayName for DomainProperty &apos;GridColor&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GridColor.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;GridColor&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GridSize.Description" xml:space="preserve">
    <value>Size of display grid units, in inches</value>
    <comment>Description for DomainProperty &apos;GridSize&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GridSize.DisplayName" xml:space="preserve">
    <value>Grid Size</value>
    <comment>DisplayName for DomainProperty &apos;GridSize&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GridSize.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;GridSize&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowForeignKeyPropertyNames.Description" xml:space="preserve">
    <value>If true, will show declared foreign key property names (if any) on the association ends</value>
    <comment>Description for DomainProperty &apos;ShowForeignKeyPropertyNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowForeignKeyPropertyNames.DisplayName" xml:space="preserve">
    <value>Show Foreign Key Property Names</value>
    <comment>DisplayName for DomainProperty &apos;ShowForeignKeyPropertyNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowForeignKeyPropertyNames.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;ShowForeignKeyPropertyNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseCollationDefault.Description" xml:space="preserve">
    <value>The default collation for database storage.</value>
    <comment>Description for DomainProperty &apos;DatabaseCollationDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseCollationDefault.DisplayName" xml:space="preserve">
    <value>Database Collation Default</value>
    <comment>DisplayName for DomainProperty &apos;DatabaseCollationDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/DatabaseCollationDefault.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;DatabaseCollationDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PropertyAccessModeDefault.Description" xml:space="preserve">
    <value>Default property access mode for backing fields</value>
    <comment>Description for DomainProperty &apos;PropertyAccessModeDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PropertyAccessModeDefault.DisplayName" xml:space="preserve">
    <value>Property Access Mode Default</value>
    <comment>DisplayName for DomainProperty &apos;PropertyAccessModeDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PropertyAccessModeDefault.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;PropertyAccessModeDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/UseTabs.Description" xml:space="preserve">
    <value>If true, will generate code with tabs instead of spaces for indentation</value>
    <comment>Description for DomainProperty &apos;UseTabs&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/UseTabs.DisplayName" xml:space="preserve">
    <value>Use Tabs</value>
    <comment>DisplayName for DomainProperty &apos;UseTabs&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/UseTabs.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;UseTabs&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GenerateDbContextFactory.Description" xml:space="preserve">
    <value>If true, a DbContextFactory-derived class will be generated for the project</value>
    <comment>Description for DomainProperty &apos;GenerateDbContextFactory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GenerateDbContextFactory.DisplayName" xml:space="preserve">
    <value>Generate Db Context Factory</value>
    <comment>DisplayName for DomainProperty &apos;GenerateDbContextFactory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GenerateDbContextFactory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;GenerateDbContextFactory&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityDefaultConstructorVisibilityDefault.Description" xml:space="preserve">
    <value>Defines the visibility of an entity&apos;s default constructor. Normally, those are public unless there are required properties or associations, then they generate as protected.</value>
    <comment>Description for DomainProperty &apos;EntityDefaultConstructorVisibilityDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityDefaultConstructorVisibilityDefault.DisplayName" xml:space="preserve">
    <value>Entity Default Constructor Visibility Default</value>
    <comment>DisplayName for DomainProperty &apos;EntityDefaultConstructorVisibilityDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/EntityDefaultConstructorVisibilityDefault.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;EntityDefaultConstructorVisibilityDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PluralizeDbSetNames.Description" xml:space="preserve">
    <value>If true, DbSet names will default to the plural value of the class name. If false, they&apos;ll be the same as the class name</value>
    <comment>Description for DomainProperty &apos;PluralizeDbSetNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PluralizeDbSetNames.DisplayName" xml:space="preserve">
    <value>Pluralize DbSet Names</value>
    <comment>DisplayName for DomainProperty &apos;PluralizeDbSetNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PluralizeDbSetNames.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;PluralizeDbSetNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PluralizeTableNames.Description" xml:space="preserve">
    <value>If true, table names will default to the plural value of the class name. If false, they&apos;ll be the same as the class name</value>
    <comment>Description for DomainProperty &apos;PluralizeTableNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PluralizeTableNames.DisplayName" xml:space="preserve">
    <value>Pluralize Table Names</value>
    <comment>DisplayName for DomainProperty &apos;PluralizeTableNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/PluralizeTableNames.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;PluralizeTableNames&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShadowKeyNamePattern.Description" xml:space="preserve">
    <value>The pattern to use for generating shadow foreign key property names</value>
    <comment>Description for DomainProperty &apos;ShadowKeyNamePattern&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShadowKeyNamePattern.DisplayName" xml:space="preserve">
    <value>Shadow Key Name Pattern</value>
    <comment>DisplayName for DomainProperty &apos;ShadowKeyNamePattern&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShadowKeyNamePattern.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ShadowKeyNamePattern&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/AutoPropertyDefault.Description" xml:space="preserve">
    <value>Default value for attribute AutoProperty setting</value>
    <comment>Description for DomainProperty &apos;AutoPropertyDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/AutoPropertyDefault.DisplayName" xml:space="preserve">
    <value>AutoProperty Default</value>
    <comment>DisplayName for DomainProperty &apos;AutoPropertyDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/AutoPropertyDefault.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;AutoPropertyDefault&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowInterfaceIndicators.Description" xml:space="preserve">
    <value>If true, will display a UML interface glyph on classes that have custom interfaces defined</value>
    <comment>Description for DomainProperty &apos;ShowInterfaceIndicators&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowInterfaceIndicators.DisplayName" xml:space="preserve">
    <value>Show Interface Indicators</value>
    <comment>DisplayName for DomainProperty &apos;ShowInterfaceIndicators&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/ShowInterfaceIndicators.Category" xml:space="preserve">
    <value>Designer</value>
    <comment>Category for DomainProperty &apos;ShowInterfaceIndicators&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GenerateTableComments.Description" xml:space="preserve">
    <value>If true, will allow generating [Comment] attributes on C# class</value>
    <comment>Description for DomainProperty &apos;GenerateTableComments&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GenerateTableComments.DisplayName" xml:space="preserve">
    <value>Generate Table Comments</value>
    <comment>DisplayName for DomainProperty &apos;GenerateTableComments&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRoot/GenerateTableComments.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;GenerateTableComments&apos; on DomainClass &apos;ModelRoot&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass.DisplayName" xml:space="preserve">
    <value>Entity</value>
    <comment>DisplayName for DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Description" xml:space="preserve">
    <value>If true, this will be generated as an abstract class</value>
    <comment>Description for DomainProperty &apos;IsAbstract&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.DisplayName" xml:space="preserve">
    <value>Abstract</value>
    <comment>DisplayName for DomainProperty &apos;IsAbstract&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAbstract.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;IsAbstract&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Description" xml:space="preserve">
    <value>Name of the database table storing data for this class</value>
    <comment>Description for DomainProperty &apos;TableName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/TableName.DisplayName" xml:space="preserve">
    <value>Table Name</value>
    <comment>DisplayName for DomainProperty &apos;TableName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/TableName.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;TableName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Description" xml:space="preserve">
    <value>The schema to use for table creation. Overrides default schema for model if present.</value>
    <comment>Description for DomainProperty &apos;DatabaseSchema&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.DisplayName" xml:space="preserve">
    <value>Database Schema</value>
    <comment>DisplayName for DomainProperty &apos;DatabaseSchema&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DatabaseSchema.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;DatabaseSchema&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Description" xml:space="preserve">
    <value>Overridden concurrency handling strategy.</value>
    <comment>Description for DomainProperty &apos;Concurrency&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.DisplayName" xml:space="preserve">
    <value>Concurrency</value>
    <comment>DisplayName for DomainProperty &apos;Concurrency&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Concurrency.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Concurrency&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.Description" xml:space="preserve">
    <value>If true, ModelClass.DatabaseSchema tracks ModelRoot.DatabaseSchema</value>
    <comment>Description for DomainProperty &apos;IsDatabaseSchemaTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseSchemaTracking.DisplayName" xml:space="preserve">
    <value>Is Database Schema Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsDatabaseSchemaTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Description" xml:space="preserve">
    <value>Overrides default namespace</value>
    <comment>Description for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.DisplayName" xml:space="preserve">
    <value>Namespace</value>
    <comment>DisplayName for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Namespace.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.Description" xml:space="preserve">
    <value>If true, ModelClass.Namespace tracks ModelRoot.Namespace</value>
    <comment>Description for DomainProperty &apos;IsNamespaceTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsNamespaceTracking.DisplayName" xml:space="preserve">
    <value>Is Namespace Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsNamespaceTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Description" xml:space="preserve">
    <value>Name of this class&apos;s container variable in the generated context</value>
    <comment>Description for DomainProperty &apos;DbSetName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.DisplayName" xml:space="preserve">
    <value>DbSet Name</value>
    <comment>DisplayName for DomainProperty &apos;DbSetName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DbSetName.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;DbSetName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Name.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Name.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Description" xml:space="preserve">
    <value>Should this class&apos;s properties implement INotifyPropertyChanged by default?</value>
    <comment>Description for DomainProperty &apos;ImplementNotify&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.DisplayName" xml:space="preserve">
    <value>Implement INotifyPropertyChanged</value>
    <comment>DisplayName for DomainProperty &apos;ImplementNotify&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ImplementNotify.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ImplementNotify&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Description" xml:space="preserve">
    <value>Optional comma-separated list of interfaces that will be added to the class definition</value>
    <comment>Description for DomainProperty &apos;CustomInterfaces&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.DisplayName" xml:space="preserve">
    <value>Custom Interfaces</value>
    <comment>DisplayName for DomainProperty &apos;CustomInterfaces&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/CustomInterfaces.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;CustomInterfaces&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Description" xml:space="preserve">
    <value>Is this a completely dependent type that will only exist associated to another object?</value>
    <comment>Description for DomainProperty &apos;IsDependentType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.DisplayName" xml:space="preserve">
    <value>Is Dependent Type</value>
    <comment>DisplayName for DomainProperty &apos;IsDependentType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDependentType.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsDependentType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Description" xml:space="preserve">
    <value>Overrides default output directory</value>
    <comment>Description for DomainProperty &apos;OutputDirectory&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.DisplayName" xml:space="preserve">
    <value>Output Directory</value>
    <comment>DisplayName for DomainProperty &apos;OutputDirectory&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/OutputDirectory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;OutputDirectory&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.Description" xml:space="preserve">
    <value>If true, ModelClass.OutputDirectory tracks ModelRoot.EntityOutputDirectory</value>
    <comment>Description for DomainProperty &apos;IsOutputDirectoryTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsOutputDirectoryTracking.DisplayName" xml:space="preserve">
    <value>Is Output Directory Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsOutputDirectoryTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/GlyphType.Description" xml:space="preserve">
    <value>Type of glyph to show on the design surface</value>
    <comment>Description for DomainProperty &apos;GlyphType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/GlyphType.DisplayName" xml:space="preserve">
    <value>Glyph Type</value>
    <comment>DisplayName for DomainProperty &apos;GlyphType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Description.Description" xml:space="preserve">
    <value>Detailed code documentation</value>
    <comment>Description for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Description.DisplayName" xml:space="preserve">
    <value>Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Description.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Description" xml:space="preserve">
    <value>Brief code documentation</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Summary.DisplayName" xml:space="preserve">
    <value>Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Description" xml:space="preserve">
    <value>Exposes Superclass property in property editor</value>
    <comment>Description for DomainProperty &apos;BaseClass&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.DisplayName" xml:space="preserve">
    <value>Base Class</value>
    <comment>DisplayName for DomainProperty &apos;BaseClass&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/BaseClass.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;BaseClass&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Description" xml:space="preserve">
    <value>Any custom attributes to be generated for this element.  Will be passed through as entered.</value>
    <comment>Description for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.DisplayName" xml:space="preserve">
    <value>Custom Attributes</value>
    <comment>DisplayName for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/CustomAttributes.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/AutoPropertyDefault.Description" xml:space="preserve">
    <value>Default value for this class&apos;s attribute AutoProperty setting</value>
    <comment>Description for DomainProperty &apos;AutoPropertyDefault&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/AutoPropertyDefault.DisplayName" xml:space="preserve">
    <value>AutoProperty Default</value>
    <comment>DisplayName for DomainProperty &apos;AutoPropertyDefault&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/AutoPropertyDefault.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;AutoPropertyDefault&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/GenerateCode.Description" xml:space="preserve">
    <value>If true (the default), code will be generated for this class. If false, it is assumed to be referenced from another assembly.</value>
    <comment>Description for DomainProperty &apos;GenerateCode&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/GenerateCode.DisplayName" xml:space="preserve">
    <value>Generate Code</value>
    <comment>DisplayName for DomainProperty &apos;GenerateCode&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/GenerateCode.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;GenerateCode&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsPropertyBag.Description" xml:space="preserve">
    <value>If true, this class will be implemented as Dictionary&lt;string, object&gt;</value>
    <comment>Description for DomainProperty &apos;IsPropertyBag&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsPropertyBag.DisplayName" xml:space="preserve">
    <value>Is Property Bag</value>
    <comment>DisplayName for DomainProperty &apos;IsPropertyBag&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsPropertyBag.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;IsPropertyBag&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsQueryType.Description" xml:space="preserve">
    <value>If true, this class is defined by a SQL query that must be implemented in a partial method. See comments in generated code for more information.</value>
    <comment>Description for DomainProperty &apos;IsQueryType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsQueryType.DisplayName" xml:space="preserve">
    <value>Is Query Type</value>
    <comment>DisplayName for DomainProperty &apos;IsQueryType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsQueryType.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsQueryType&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ExcludeFromMigrations.Description" xml:space="preserve">
    <value>If true, this class won&apos;t be involved in database migrations</value>
    <comment>Description for DomainProperty &apos;ExcludeFromMigrations&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ExcludeFromMigrations.DisplayName" xml:space="preserve">
    <value>Exclude From Migrations</value>
    <comment>DisplayName for DomainProperty &apos;ExcludeFromMigrations&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ExcludeFromMigrations.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ExcludeFromMigrations&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseView.Description" xml:space="preserve">
    <value>If true, this class is persisted in a view in the database</value>
    <comment>Description for DomainProperty &apos;IsDatabaseView&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseView.DisplayName" xml:space="preserve">
    <value>Is Database View</value>
    <comment>DisplayName for DomainProperty &apos;IsDatabaseView&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDatabaseView.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsDatabaseView&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ViewName.Description" xml:space="preserve">
    <value>The name of the database view persisting this class</value>
    <comment>Description for DomainProperty &apos;ViewName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ViewName.DisplayName" xml:space="preserve">
    <value>View Name</value>
    <comment>DisplayName for DomainProperty &apos;ViewName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ViewName.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ViewName&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DefaultConstructorVisibility.Description" xml:space="preserve">
    <value>By default, default (empty) constructors generate as public unless there are required properties or associations in the entity, then they generate as protected.</value>
    <comment>Description for DomainProperty &apos;DefaultConstructorVisibility&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DefaultConstructorVisibility.DisplayName" xml:space="preserve">
    <value>Default Constructor Visibility</value>
    <comment>DisplayName for DomainProperty &apos;DefaultConstructorVisibility&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DefaultConstructorVisibility.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;DefaultConstructorVisibility&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDefaultConstructorVisibilityTracking.Description" xml:space="preserve">
    <value>If true, Model.DefaultConstructorVisibility tracks ModelRoot.EntityDefaultConstructorVisibilityDefault</value>
    <comment>Description for DomainProperty &apos;IsDefaultConstructorVisibilityTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsDefaultConstructorVisibilityTracking.DisplayName" xml:space="preserve">
    <value>Is Default Constructor Visibility Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsDefaultConstructorVisibilityTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAutoPropertyDefaultTracking.Description" xml:space="preserve">
    <value>If true, ModelClass.AutoPropertyDefault tracks ModelRoot.AutoPropertyDefault</value>
    <comment>Description for DomainProperty &apos;IsAutoPropertyDefaultTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAutoPropertyDefaultTracking.DisplayName" xml:space="preserve">
    <value>Is Auto Property Default Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsAutoPropertyDefaultTracking&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ShouldShowInterfaceGlyph.Description" xml:space="preserve">
    <value>Used internally to determine whether an interface glyph should be shown on the diagram for the class</value>
    <comment>Description for DomainProperty &apos;ShouldShowInterfaceGlyph&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/ShouldShowInterfaceGlyph.DisplayName" xml:space="preserve">
    <value>Should Show Interface Glyph</value>
    <comment>DisplayName for DomainProperty &apos;ShouldShowInterfaceGlyph&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/UseTemporalTables.Description" xml:space="preserve">
    <value>If true, will configure the class to use temporal tables for storage. This is not supported in all database types.</value>
    <comment>Description for DomainProperty &apos;UseTemporalTables&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/UseTemporalTables.DisplayName" xml:space="preserve">
    <value>Use Temporal Tables</value>
    <comment>DisplayName for DomainProperty &apos;UseTemporalTables&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/UseTemporalTables.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;UseTemporalTables&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAssociationClass.Description" xml:space="preserve">
    <value>If true, this is an association class for a many-to-many association</value>
    <comment>Description for DomainProperty &apos;IsAssociationClass&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAssociationClass.DisplayName" xml:space="preserve">
    <value>Is Association Class</value>
    <comment>DisplayName for DomainProperty &apos;IsAssociationClass&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/IsAssociationClass.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;IsAssociationClass&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DescribedAssociationElementId.Description" xml:space="preserve">
    <value>When IsAssociationClass is true, the element id of the association this entity extends</value>
    <comment>Description for DomainProperty &apos;DescribedAssociationElementId&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/DescribedAssociationElementId.DisplayName" xml:space="preserve">
    <value>Described Association Element Id</value>
    <comment>DisplayName for DomainProperty &apos;DescribedAssociationElementId&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/TableComment.Description" xml:space="preserve">
    <value>Table comment that will be applied to the database, if possible</value>
    <comment>Description for DomainProperty &apos;TableComment&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/TableComment.DisplayName" xml:space="preserve">
    <value>Table Comment</value>
    <comment>DisplayName for DomainProperty &apos;TableComment&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelClass/TableComment.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;TableComment&apos; on DomainClass &apos;ModelClass&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute.Description" xml:space="preserve">
    <value>An attribute of a class.</value>
    <comment>Description for DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute.DisplayName" xml:space="preserve">
    <value>Property</value>
    <comment>DisplayName for DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Description" xml:space="preserve">
    <value>Type of this attribute</value>
    <comment>Description for DomainProperty &apos;Type&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.DisplayName" xml:space="preserve">
    <value>Type</value>
    <comment>DisplayName for DomainProperty &apos;Type&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Type.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Type&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Description" xml:space="preserve">
    <value>Value for attribute when first created</value>
    <comment>Description for DomainProperty &apos;InitialValue&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.DisplayName" xml:space="preserve">
    <value>Initial Value</value>
    <comment>DisplayName for DomainProperty &apos;InitialValue&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/InitialValue.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;InitialValue&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Description" xml:space="preserve">
    <value>Does this attribute represent the identity of the object?</value>
    <comment>Description for DomainProperty &apos;IsIdentity&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.DisplayName" xml:space="preserve">
    <value>Is Identity</value>
    <comment>DisplayName for DomainProperty &apos;IsIdentity&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsIdentity.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsIdentity&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Description" xml:space="preserve">
    <value>If true, cannot be null (or the default value for the property type, if not nullable)</value>
    <comment>Description for DomainProperty &apos;Required&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.DisplayName" xml:space="preserve">
    <value>Required</value>
    <comment>DisplayName for DomainProperty &apos;Required&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Required.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Required&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Description" xml:space="preserve">
    <value>Attribute will be stored in persistent storage</value>
    <comment>Description for DomainProperty &apos;Persistent&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.DisplayName" xml:space="preserve">
    <value>Persistent</value>
    <comment>DisplayName for DomainProperty &apos;Persistent&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Persistent.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Persistent&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Description" xml:space="preserve">
    <value>Maximum length of the string, A positive number will generate a length constraint, negative number means the database maximum (approx. 2GB), and null or 0 for no max length entry (migration traditionally will set the database column to 2000 characters).</value>
    <comment>Description for DomainProperty &apos;MaxLength&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.DisplayName" xml:space="preserve">
    <value>Max Length</value>
    <comment>DisplayName for DomainProperty &apos;MaxLength&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/MaxLength.Category" xml:space="preserve">
    <value>String Properties</value>
    <comment>Category for DomainProperty &apos;MaxLength&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Description" xml:space="preserve">
    <value>Should this attribute create an index in the database?</value>
    <comment>Description for DomainProperty &apos;Indexed&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.DisplayName" xml:space="preserve">
    <value>Indexed</value>
    <comment>DisplayName for DomainProperty &apos;Indexed&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Indexed.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;Indexed&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Description" xml:space="preserve">
    <value>If indexed, is the index a unique index?</value>
    <comment>Description for DomainProperty &apos;IndexedUnique&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.DisplayName" xml:space="preserve">
    <value>Indexed Unique</value>
    <comment>DisplayName for DomainProperty &apos;IndexedUnique&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IndexedUnique.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IndexedUnique&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Description" xml:space="preserve">
    <value>If not empty, will create a standard validation annotation for this attribute.</value>
    <comment>Description for DomainProperty &apos;StringType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.DisplayName" xml:space="preserve">
    <value>String Type</value>
    <comment>DisplayName for DomainProperty &apos;StringType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/StringType.Category" xml:space="preserve">
    <value>String Properties</value>
    <comment>Category for DomainProperty &apos;StringType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Description" xml:space="preserve">
    <value>Unused - Alternate table to store this attribute. If empty, the class&apos;s table is used.</value>
    <comment>Description for DomainProperty &apos;TableOverride&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.DisplayName" xml:space="preserve">
    <value>Table Override</value>
    <comment>DisplayName for DomainProperty &apos;TableOverride&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/TableOverride.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;TableOverride&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Description" xml:space="preserve">
    <value>If true, this property serves as the concurrency value for the class</value>
    <comment>Description for DomainProperty &apos;IsConcurrencyToken&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.DisplayName" xml:space="preserve">
    <value>Is Concurrency Token</value>
    <comment>DisplayName for DomainProperty &apos;IsConcurrencyToken&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsConcurrencyToken.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IsConcurrencyToken&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Description" xml:space="preserve">
    <value>If this property is an identity, how the value is generated</value>
    <comment>Description for DomainProperty &apos;IdentityType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.DisplayName" xml:space="preserve">
    <value>Identity Type</value>
    <comment>DisplayName for DomainProperty &apos;IdentityType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IdentityType.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;IdentityType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Description" xml:space="preserve">
    <value>Detailed code documentation</value>
    <comment>Description for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.DisplayName" xml:space="preserve">
    <value>Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Description.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Description" xml:space="preserve">
    <value>Brief code documentation</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.DisplayName" xml:space="preserve">
    <value>Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Description" xml:space="preserve">
    <value>The name of the property. Must be a valid C# symbol.</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Name.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Description" xml:space="preserve">
    <value>Visibility for property setter; getter is public</value>
    <comment>Description for DomainProperty &apos;SetterVisibility&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.DisplayName" xml:space="preserve">
    <value>Setter Visibility</value>
    <comment>DisplayName for DomainProperty &apos;SetterVisibility&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/SetterVisibility.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;SetterVisibility&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Description" xml:space="preserve">
    <value>If true, property will be generated with the &apos;virtual&apos; keyword</value>
    <comment>Description for DomainProperty &apos;Virtual&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.DisplayName" xml:space="preserve">
    <value>Virtual</value>
    <comment>DisplayName for DomainProperty &apos;Virtual&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/Virtual.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Virtual&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Description" xml:space="preserve">
    <value>If true, no setter will be generated. Only valid for transient public properties.</value>
    <comment>Description for DomainProperty &apos;ReadOnly&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.DisplayName" xml:space="preserve">
    <value>Read Only</value>
    <comment>DisplayName for DomainProperty &apos;ReadOnly&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ReadOnly.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ReadOnly&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Description" xml:space="preserve">
    <value>If false, generates a backing field and a partial method to hook getting and setting the property. If true, generates a simple auto property.</value>
    <comment>Description for DomainProperty &apos;AutoProperty&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.DisplayName" xml:space="preserve">
    <value>Auto Property</value>
    <comment>DisplayName for DomainProperty &apos;AutoProperty&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/AutoProperty.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;AutoProperty&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Description" xml:space="preserve">
    <value>Minimum length of the string, 0 for no minimum length</value>
    <comment>Description for DomainProperty &apos;MinLength&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.DisplayName" xml:space="preserve">
    <value>Min Length</value>
    <comment>DisplayName for DomainProperty &apos;MinLength&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/MinLength.Category" xml:space="preserve">
    <value>String Properties</value>
    <comment>Category for DomainProperty &apos;MinLength&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Description" xml:space="preserve">
    <value>The name for the table column backing this property</value>
    <comment>Description for DomainProperty &apos;ColumnName&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.DisplayName" xml:space="preserve">
    <value>Column Name</value>
    <comment>DisplayName for DomainProperty &apos;ColumnName&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnName.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ColumnName&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.Description" xml:space="preserve">
    <value>If true, ModelAttribute.ColumnName tracks ModelAttribute.Name</value>
    <comment>Description for DomainProperty &apos;IsColumnNameTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnNameTracking.DisplayName" xml:space="preserve">
    <value>Is Column Name Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsColumnNameTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Description" xml:space="preserve">
    <value>The data type for the table column backing this property</value>
    <comment>Description for DomainProperty &apos;ColumnType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.DisplayName" xml:space="preserve">
    <value>Column Type</value>
    <comment>DisplayName for DomainProperty &apos;ColumnType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ColumnType.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;ColumnType&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.Description" xml:space="preserve">
    <value>If true, ModelAttribute.ColumnType tracks ModelAttribute.Type</value>
    <comment>Description for DomainProperty &apos;IsColumnTypeTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsColumnTypeTracking.DisplayName" xml:space="preserve">
    <value>Is Column Type Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsColumnTypeTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Description" xml:space="preserve">
    <value>Any custom attributes to be generated for this element.  Will be passed through as entered.</value>
    <comment>Description for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.DisplayName" xml:space="preserve">
    <value>Custom Attributes</value>
    <comment>DisplayName for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/CustomAttributes.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Description" xml:space="preserve">
    <value>Text for [Display(Name=&quot;&lt;text&gt;&quot;)] attribute</value>
    <comment>Description for DomainProperty &apos;DisplayText&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.DisplayName" xml:space="preserve">
    <value>Display Text</value>
    <comment>DisplayName for DomainProperty &apos;DisplayText&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/DisplayText.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;DisplayText&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ImplementNotify.Description" xml:space="preserve">
    <value>Should this class implement INotifyPropertyChanged?</value>
    <comment>Description for DomainProperty &apos;ImplementNotify&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ImplementNotify.DisplayName" xml:space="preserve">
    <value>Implement INotifyPropertyChanged</value>
    <comment>DisplayName for DomainProperty &apos;ImplementNotify&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/ImplementNotify.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ImplementNotify&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsImplementNotifyTracking.Description" xml:space="preserve">
    <value>If true, ModelAttribute.IsImplementNotify tracks ModelClass.ImplementNotify</value>
    <comment>Description for DomainProperty &apos;IsImplementNotifyTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsImplementNotifyTracking.DisplayName" xml:space="preserve">
    <value>Is Implement Notify Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsImplementNotifyTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsAutoPropertyTracking.Description" xml:space="preserve">
    <value>If true, ModelAttribute.AutoProperty tracks ModelClass.AutoPropertyDefault</value>
    <comment>Description for DomainProperty &apos;IsAutoPropertyTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsAutoPropertyTracking.DisplayName" xml:space="preserve">
    <value>Is Auto Property Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsAutoPropertyTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsForeignKeyFor.Description" xml:space="preserve">
    <value>If present, this attribute is a foreign key for the association named by this Guid</value>
    <comment>Description for DomainProperty &apos;IsForeignKeyFor&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsForeignKeyFor.DisplayName" xml:space="preserve">
    <value>Is Foreign Key For</value>
    <comment>DisplayName for DomainProperty &apos;IsForeignKeyFor&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/BackingFieldName.Description" xml:space="preserve">
    <value>The name of the backing field for this property</value>
    <comment>Description for DomainProperty &apos;BackingFieldName&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/BackingFieldName.DisplayName" xml:space="preserve">
    <value>Backing Field</value>
    <comment>DisplayName for DomainProperty &apos;BackingFieldName&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/BackingFieldName.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;BackingFieldName&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/DatabaseCollation.Description" xml:space="preserve">
    <value>Overrides the default database collation setting for the column that persists this attribute</value>
    <comment>Description for DomainProperty &apos;DatabaseCollation&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/DatabaseCollation.DisplayName" xml:space="preserve">
    <value>Database Collation</value>
    <comment>DisplayName for DomainProperty &apos;DatabaseCollation&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/DatabaseCollation.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;DatabaseCollation&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsDatabaseCollationTracking.Description" xml:space="preserve">
    <value>If true, ModelAttribute.DatabaseCollation tracks ModelRoot.DatabaseCollationDefault</value>
    <comment>Description for DomainProperty &apos;IsDatabaseCollationTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsDatabaseCollationTracking.DisplayName" xml:space="preserve">
    <value>Is Database Collation Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsDatabaseCollationTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/PropertyAccessMode.Description" xml:space="preserve">
    <value>Defines how EF reads and write this property or its backing field. See  https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.propertyaccessmode</value>
    <comment>Description for DomainProperty &apos;PropertyAccessMode&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/PropertyAccessMode.DisplayName" xml:space="preserve">
    <value>Property Access Mode</value>
    <comment>DisplayName for DomainProperty &apos;PropertyAccessMode&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/PropertyAccessMode.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;PropertyAccessMode&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsAbstract.Description" xml:space="preserve">
    <value>If true, this will be generated as an abstract property</value>
    <comment>Description for DomainProperty &apos;IsAbstract&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsAbstract.DisplayName" xml:space="preserve">
    <value>Abstract</value>
    <comment>DisplayName for DomainProperty &apos;IsAbstract&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsAbstract.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;IsAbstract&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsPropertyAccessModeTracking.Description" xml:space="preserve">
    <value>If true, ModelAttribute.PropertyAccessMode tracks ModelRoot.PropertyAccessModeDefault</value>
    <comment>Description for DomainProperty &apos;IsPropertyAccessModeTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelAttribute/IsPropertyAccessModeTracking.DisplayName" xml:space="preserve">
    <value>Is Property Access Mode Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsPropertyAccessModeTracking&apos; on DomainClass &apos;ModelAttribute&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Comment.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;Comment&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Comment.DisplayName" xml:space="preserve">
    <value>Comment</value>
    <comment>DisplayName for DomainClass &apos;Comment&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Comment/Text.Description" xml:space="preserve">
    <value>Comment text</value>
    <comment>Description for DomainProperty &apos;Text&apos; on DomainClass &apos;Comment&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Comment/Text.DisplayName" xml:space="preserve">
    <value>Text</value>
    <comment>DisplayName for DomainProperty &apos;Text&apos; on DomainClass &apos;Comment&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Comment/ShortText.Description" xml:space="preserve">
    <value>Truncated Text property for Explorer display</value>
    <comment>Description for DomainProperty &apos;ShortText&apos; on DomainClass &apos;Comment&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Comment/ShortText.DisplayName" xml:space="preserve">
    <value>Short Text</value>
    <comment>DisplayName for DomainProperty &apos;ShortText&apos; on DomainClass &apos;Comment&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum.Description" xml:space="preserve">
    <value>Represents an enumeration in C#</value>
    <comment>Description for DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum.DisplayName" xml:space="preserve">
    <value>Enum</value>
    <comment>DisplayName for DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/ValueType.Description" xml:space="preserve">
    <value>CLR type implementing this enum (usually Int32)</value>
    <comment>Description for DomainProperty &apos;ValueType&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/ValueType.DisplayName" xml:space="preserve">
    <value>Value Type</value>
    <comment>DisplayName for DomainProperty &apos;ValueType&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/ValueType.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;ValueType&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Namespace.Description" xml:space="preserve">
    <value>Overrides default namespace</value>
    <comment>Description for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Namespace.DisplayName" xml:space="preserve">
    <value>Namespace</value>
    <comment>DisplayName for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Namespace.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Namespace&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsNamespaceTracking.Description" xml:space="preserve">
    <value>If true, ModelEnum.Namespace tracks ModelRoot.Namespace</value>
    <comment>Description for DomainProperty &apos;IsNamespaceTracking&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsNamespaceTracking.DisplayName" xml:space="preserve">
    <value>Is Namespace Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsNamespaceTracking&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Name.Description" xml:space="preserve">
    <value>Name of the enumeration</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Name.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsFlags.Description" xml:space="preserve">
    <value>If true, values in this enumeration are flags and will have initial values set appropriately.</value>
    <comment>Description for DomainProperty &apos;IsFlags&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsFlags.DisplayName" xml:space="preserve">
    <value>Values are Flags</value>
    <comment>DisplayName for DomainProperty &apos;IsFlags&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsFlags.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;IsFlags&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/OutputDirectory.Description" xml:space="preserve">
    <value>Overrides default output directory</value>
    <comment>Description for DomainProperty &apos;OutputDirectory&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/OutputDirectory.DisplayName" xml:space="preserve">
    <value>Output Directory</value>
    <comment>DisplayName for DomainProperty &apos;OutputDirectory&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/OutputDirectory.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;OutputDirectory&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsOutputDirectoryTracking.Description" xml:space="preserve">
    <value>If true, ModelEnum.OutputDirectory tracks ModelRoot.EnumOutputDirectory</value>
    <comment>Description for DomainProperty &apos;IsOutputDirectoryTracking&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/IsOutputDirectoryTracking.DisplayName" xml:space="preserve">
    <value>Is Output Directory Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsOutputDirectoryTracking&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/GlyphType.Description" xml:space="preserve">
    <value>Type of glyph to show on the design surface</value>
    <comment>Description for DomainProperty &apos;GlyphType&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/GlyphType.DisplayName" xml:space="preserve">
    <value>Glyph Type</value>
    <comment>DisplayName for DomainProperty &apos;GlyphType&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Description.Description" xml:space="preserve">
    <value>Detailed code documentation</value>
    <comment>Description for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Description.DisplayName" xml:space="preserve">
    <value>Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Description.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Summary.Description" xml:space="preserve">
    <value>Brief code documentation</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Summary.DisplayName" xml:space="preserve">
    <value>Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/CustomAttributes.Description" xml:space="preserve">
    <value>Any custom attributes to be generated for this element. Will be passed through as entered.</value>
    <comment>Description for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/CustomAttributes.DisplayName" xml:space="preserve">
    <value>Custom Attributes</value>
    <comment>DisplayName for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/CustomAttributes.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/GenerateCode.Description" xml:space="preserve">
    <value>If true (the default), code will be generated for this enum. If false, it is assumed to be referenced from another assembly.</value>
    <comment>Description for DomainProperty &apos;GenerateCode&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/GenerateCode.DisplayName" xml:space="preserve">
    <value>Generate Code</value>
    <comment>DisplayName for DomainProperty &apos;GenerateCode&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnum/GenerateCode.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;GenerateCode&apos; on DomainClass &apos;ModelEnum&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue.Description" xml:space="preserve">
    <value>Represents a value in a C# enumeration</value>
    <comment>Description for DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue.DisplayName" xml:space="preserve">
    <value>Value</value>
    <comment>DisplayName for DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Name.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Name.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Value.Description" xml:space="preserve">
    <value>Optional value for this enum element. Must be in the range of the enum&apos;s ValueType</value>
    <comment>Description for DomainProperty &apos;Value&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Value.DisplayName" xml:space="preserve">
    <value>Value</value>
    <comment>DisplayName for DomainProperty &apos;Value&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Value.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Value&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Description.Description" xml:space="preserve">
    <value>Detailed code documentation</value>
    <comment>Description for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Description.DisplayName" xml:space="preserve">
    <value>Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Description.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Description&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Summary.Description" xml:space="preserve">
    <value>Brief code documentation</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Summary.DisplayName" xml:space="preserve">
    <value>Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/CustomAttributes.Description" xml:space="preserve">
    <value>Any custom attributes to be generated for this element. Will be passed through as entered.</value>
    <comment>Description for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/CustomAttributes.DisplayName" xml:space="preserve">
    <value>Custom Attributes</value>
    <comment>DisplayName for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/CustomAttributes.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;CustomAttributes&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/DisplayText.Description" xml:space="preserve">
    <value>Text for [Display(Name=&quot;&lt;text&gt;&quot;)] attribute</value>
    <comment>Description for DomainProperty &apos;DisplayText&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/DisplayText.DisplayName" xml:space="preserve">
    <value>Display Text</value>
    <comment>DisplayName for DomainProperty &apos;DisplayText&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumValue/DisplayText.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;DisplayText&apos; on DomainClass &apos;ModelEnumValue&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DesignElement.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.DesignElement</value>
    <comment>Description for DomainClass &apos;DesignElement&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DesignElement.DisplayName" xml:space="preserve">
    <value>Design Element</value>
    <comment>DisplayName for DomainClass &apos;DesignElement&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelDiagramData.Description" xml:space="preserve">
    <value>Represents a viewable model diagram</value>
    <comment>Description for DomainClass &apos;ModelDiagramData&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelDiagramData.DisplayName" xml:space="preserve">
    <value>Diagram</value>
    <comment>DisplayName for DomainClass &apos;ModelDiagramData&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelDiagramData/Name.Description" xml:space="preserve">
    <value>Diagram name</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelDiagramData&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelDiagramData/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;ModelDiagramData&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association.Description" xml:space="preserve">
    <value>Associations between Classes.</value>
    <comment>Description for DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association.DisplayName" xml:space="preserve">
    <value>Association</value>
    <comment>DisplayName for DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceMultiplicity.Description" xml:space="preserve">
    <value>The allowed number of entities at this end of the association</value>
    <comment>Description for DomainProperty &apos;SourceMultiplicity&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceMultiplicity.DisplayName" xml:space="preserve">
    <value>End1 Multiplicity</value>
    <comment>DisplayName for DomainProperty &apos;SourceMultiplicity&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceMultiplicity.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceMultiplicity&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetMultiplicity.Description" xml:space="preserve">
    <value>The allowed number of entities at this end of the association</value>
    <comment>Description for DomainProperty &apos;TargetMultiplicity&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetMultiplicity.DisplayName" xml:space="preserve">
    <value>End2 Multiplicity</value>
    <comment>DisplayName for DomainProperty &apos;TargetMultiplicity&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetMultiplicity.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetMultiplicity&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyName.Description" xml:space="preserve">
    <value>Name of the entity property that returns the value at this end</value>
    <comment>Description for DomainProperty &apos;TargetPropertyName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyName.DisplayName" xml:space="preserve">
    <value>End2 Navigation Property</value>
    <comment>DisplayName for DomainProperty &apos;TargetPropertyName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyName.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetPropertyName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Persistent.Description" xml:space="preserve">
    <value>If false, this is a transient association not stored in the database but instead created in code</value>
    <comment>Description for DomainProperty &apos;Persistent&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Persistent.DisplayName" xml:space="preserve">
    <value>Persistent</value>
    <comment>DisplayName for DomainProperty &apos;Persistent&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Persistent.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;Persistent&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceMultiplicityDisplay.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainProperty &apos;SourceMultiplicityDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceMultiplicityDisplay.DisplayName" xml:space="preserve">
    <value>Source Multiplicity Display</value>
    <comment>DisplayName for DomainProperty &apos;SourceMultiplicityDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceMultiplicityDisplay.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceMultiplicityDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetMultiplicityDisplay.Description" xml:space="preserve">
    <value>Decorator text</value>
    <comment>Description for DomainProperty &apos;TargetMultiplicityDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetMultiplicityDisplay.DisplayName" xml:space="preserve">
    <value>Target Multiplicity Display</value>
    <comment>DisplayName for DomainProperty &apos;TargetMultiplicityDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetMultiplicityDisplay.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetMultiplicityDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceDeleteAction.Description" xml:space="preserve">
    <value>The action to take when an entity on this end is deleted.</value>
    <comment>Description for DomainProperty &apos;SourceDeleteAction&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceDeleteAction.DisplayName" xml:space="preserve">
    <value>End1 On Delete</value>
    <comment>DisplayName for DomainProperty &apos;SourceDeleteAction&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceDeleteAction.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceDeleteAction&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDeleteAction.Description" xml:space="preserve">
    <value>The action to take when an entity on this end is deleted.</value>
    <comment>Description for DomainProperty &apos;TargetDeleteAction&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDeleteAction.DisplayName" xml:space="preserve">
    <value>End2 On Delete</value>
    <comment>DisplayName for DomainProperty &apos;TargetDeleteAction&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDeleteAction.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetDeleteAction&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/CollectionClass.Description" xml:space="preserve">
    <value>Class used to instanciate association properties. Implements ICollection&lt;&gt;</value>
    <comment>Description for DomainProperty &apos;CollectionClass&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/CollectionClass.DisplayName" xml:space="preserve">
    <value>Collection Class</value>
    <comment>DisplayName for DomainProperty &apos;CollectionClass&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/CollectionClass.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;CollectionClass&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDescription.Description" xml:space="preserve">
    <value>Detailed code documentation for this end of the association</value>
    <comment>Description for DomainProperty &apos;TargetDescription&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDescription.DisplayName" xml:space="preserve">
    <value>End2 Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;TargetDescription&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDescription.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetDescription&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetSummary.Description" xml:space="preserve">
    <value>Short code documentation for this end of the association</value>
    <comment>Description for DomainProperty &apos;TargetSummary&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetSummary.DisplayName" xml:space="preserve">
    <value>End2 Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;TargetSummary&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetSummary.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetSummary&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Summary.Description" xml:space="preserve">
    <value>Brief code documentation</value>
    <comment>Description for DomainProperty &apos;Summary&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Summary.DisplayName" xml:space="preserve">
    <value>Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;Summary&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Summary.Category" xml:space="preserve">
    <value>Documentation</value>
    <comment>Category for DomainProperty &apos;Summary&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsCollectionClassTracking.Description" xml:space="preserve">
    <value>If true, Association.CollectionClass tracks ModelRoot.DefaultCollectionClass</value>
    <comment>Description for DomainProperty &apos;IsCollectionClassTracking&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsCollectionClassTracking.DisplayName" xml:space="preserve">
    <value>Is Collection Class Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsCollectionClassTracking&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceRole.Description" xml:space="preserve">
    <value>Which object(s) in this association is/are the principal object(s)?</value>
    <comment>Description for DomainProperty &apos;SourceRole&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceRole.DisplayName" xml:space="preserve">
    <value>End1 Role</value>
    <comment>DisplayName for DomainProperty &apos;SourceRole&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/SourceRole.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceRole&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetRole.Description" xml:space="preserve">
    <value>Which object(s) in this association is/are the dependent object(s)?</value>
    <comment>Description for DomainProperty &apos;TargetRole&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetRole.DisplayName" xml:space="preserve">
    <value>End2 Role</value>
    <comment>DisplayName for DomainProperty &apos;TargetRole&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetRole.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetRole&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/ForeignKeyLocation.Description" xml:space="preserve">
    <value>Which class should hold the foreign key for this relationship</value>
    <comment>Description for DomainProperty &apos;ForeignKeyLocation&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/ForeignKeyLocation.DisplayName" xml:space="preserve">
    <value>Foreign Key Location</value>
    <comment>DisplayName for DomainProperty &apos;ForeignKeyLocation&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetCustomAttributes.Description" xml:space="preserve">
    <value>Any custom attributes to be generated for the target property. Will be passed through as entered.</value>
    <comment>Description for DomainProperty &apos;TargetCustomAttributes&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetCustomAttributes.DisplayName" xml:space="preserve">
    <value>End2 Custom Attributes</value>
    <comment>DisplayName for DomainProperty &apos;TargetCustomAttributes&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetCustomAttributes.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetCustomAttributes&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDisplayText.Description" xml:space="preserve">
    <value>Text for [Display(Name=&quot;&lt;text&gt;&quot;)] attribute on this end&apos;s property</value>
    <comment>Description for DomainProperty &apos;TargetDisplayText&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDisplayText.DisplayName" xml:space="preserve">
    <value>End2 Display Text</value>
    <comment>DisplayName for DomainProperty &apos;TargetDisplayText&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetDisplayText.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetDisplayText&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetImplementNotify.Description" xml:space="preserve">
    <value>Should this end participate in INotifyPropertyChanged activities? Only valid for non-collection targets.</value>
    <comment>Description for DomainProperty &apos;TargetImplementNotify&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetImplementNotify.DisplayName" xml:space="preserve">
    <value>End2 Implement INotifyPropertyChanged</value>
    <comment>DisplayName for DomainProperty &apos;TargetImplementNotify&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetImplementNotify.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetImplementNotify&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetImplementNotifyTracking.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.Association.Is Target Implement Notify Tracking</value>
    <comment>Description for DomainProperty &apos;IsTargetImplementNotifyTracking&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetImplementNotifyTracking.DisplayName" xml:space="preserve">
    <value>Is Target Implement Notify Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsTargetImplementNotifyTracking&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/FKPropertyName.Description" xml:space="preserve">
    <value>Name of property holding foreign key value for this association</value>
    <comment>Description for DomainProperty &apos;FKPropertyName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/FKPropertyName.DisplayName" xml:space="preserve">
    <value>Foreign Key Property</value>
    <comment>DisplayName for DomainProperty &apos;FKPropertyName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/FKPropertyName.Category" xml:space="preserve">
    <value>Code Generation</value>
    <comment>Category for DomainProperty &apos;FKPropertyName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyNameDisplay.Description" xml:space="preserve">
    <value>Decorator text</value>
    <comment>Description for DomainProperty &apos;TargetPropertyNameDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyNameDisplay.DisplayName" xml:space="preserve">
    <value>Target Property Name Display</value>
    <comment>DisplayName for DomainProperty &apos;TargetPropertyNameDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyNameDisplay.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetPropertyNameDisplay&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Name.Description" xml:space="preserve">
    <value>Solely for display in the object list of the VStudio property window</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/JoinTableName.Description" xml:space="preserve">
    <value>Optional name of the database table used to join the two end classes for many-to-many associations. If empty, a reasonable default name will be used.</value>
    <comment>Description for DomainProperty &apos;JoinTableName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/JoinTableName.DisplayName" xml:space="preserve">
    <value>Join Table Name</value>
    <comment>DisplayName for DomainProperty &apos;JoinTableName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/JoinTableName.Category" xml:space="preserve">
    <value>Database</value>
    <comment>Category for DomainProperty &apos;JoinTableName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetBackingFieldName.Description" xml:space="preserve">
    <value>The name of the backing field for this property</value>
    <comment>Description for DomainProperty &apos;TargetBackingFieldName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetBackingFieldName.DisplayName" xml:space="preserve">
    <value>End2 Backing Field</value>
    <comment>DisplayName for DomainProperty &apos;TargetBackingFieldName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetBackingFieldName.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetBackingFieldName&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyAccessMode.Description" xml:space="preserve">
    <value>Defines how EF reads and write this property or its backing field. See  https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.propertyaccessmode</value>
    <comment>Description for DomainProperty &apos;TargetPropertyAccessMode&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyAccessMode.DisplayName" xml:space="preserve">
    <value>End2 Property Access Mode</value>
    <comment>DisplayName for DomainProperty &apos;TargetPropertyAccessMode&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetPropertyAccessMode.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetPropertyAccessMode&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetAutoProperty.Description" xml:space="preserve">
    <value>If false, generates a backing field and a partial method to hook getting and setting the property. If true, generates a simple auto property. Only valid for non-collection properties.</value>
    <comment>Description for DomainProperty &apos;TargetAutoProperty&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetAutoProperty.DisplayName" xml:space="preserve">
    <value>End2 Is Auto Property</value>
    <comment>DisplayName for DomainProperty &apos;TargetAutoProperty&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetAutoProperty.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetAutoProperty&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetAutoPropertyTracking.Description" xml:space="preserve">
    <value>If true, Association.TargetAutoProperty tracks ModelClass.AutoPropertyDefault</value>
    <comment>Description for DomainProperty &apos;IsTargetAutoPropertyTracking&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetAutoPropertyTracking.DisplayName" xml:space="preserve">
    <value>Is Target Auto Property Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsTargetAutoPropertyTracking&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetAbstract.Description" xml:space="preserve">
    <value>If true, the property for this end will be abstract</value>
    <comment>Description for DomainProperty &apos;IsTargetAbstract&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetAbstract.DisplayName" xml:space="preserve">
    <value>End2 Is Abstract</value>
    <comment>DisplayName for DomainProperty &apos;IsTargetAbstract&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/IsTargetAbstract.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;IsTargetAbstract&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetAutoInclude.Description" xml:space="preserve">
    <value>If true, the property at End1 will be automatically included in queries</value>
    <comment>Description for DomainProperty &apos;TargetAutoInclude&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetAutoInclude.DisplayName" xml:space="preserve">
    <value>End2 Auto Include</value>
    <comment>DisplayName for DomainProperty &apos;TargetAutoInclude&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/TargetAutoInclude.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;TargetAutoInclude&apos; on DomainClass &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Source.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Source&apos; on DomainRelationship &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Source.DisplayName" xml:space="preserve">
    <value>Source</value>
    <comment>DisplayName for DomainRole &apos;Source&apos; on DomainRelationship &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Source.PropertyDisplayName" xml:space="preserve">
    <value>Targets</value>
    <comment>PropertyDisplayName for DomainRole &apos;Source&apos; on DomainRelationship &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Target.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Target&apos; on DomainRelationship &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Target.DisplayName" xml:space="preserve">
    <value>Target</value>
    <comment>DisplayName for DomainRole &apos;Target&apos; on DomainRelationship &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Association/Target.PropertyDisplayName" xml:space="preserve">
    <value>Sources</value>
    <comment>PropertyDisplayName for DomainRole &apos;Target&apos; on DomainRelationship &apos;Association&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation.DisplayName" xml:space="preserve">
    <value>Unidirectional Association</value>
    <comment>DisplayName for DomainClass &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;UnidirectionalSource&apos; on DomainRelationship &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.DisplayName" xml:space="preserve">
    <value>Unidirectional Source</value>
    <comment>DisplayName for DomainRole &apos;UnidirectionalSource&apos; on DomainRelationship &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalSource.PropertyDisplayName" xml:space="preserve">
    <value>Unidirectional Targets</value>
    <comment>PropertyDisplayName for DomainRole &apos;UnidirectionalSource&apos; on DomainRelationship &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;UnidirectionalTarget&apos; on DomainRelationship &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.DisplayName" xml:space="preserve">
    <value>Unidirectional Target</value>
    <comment>DisplayName for DomainRole &apos;UnidirectionalTarget&apos; on DomainRelationship &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalAssociation/UnidirectionalTarget.PropertyDisplayName" xml:space="preserve">
    <value>Unidirectional Sources</value>
    <comment>PropertyDisplayName for DomainRole &apos;UnidirectionalTarget&apos; on DomainRelationship &apos;UnidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes.DisplayName" xml:space="preserve">
    <value>Class Has Attributes</value>
    <comment>DisplayName for DomainClass &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes/ModelClass.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes/ModelClass.DisplayName" xml:space="preserve">
    <value>Model Class</value>
    <comment>DisplayName for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes/ModelClass.PropertyDisplayName" xml:space="preserve">
    <value>Attributes</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes/Attribute.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Attribute&apos; on DomainRelationship &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes/Attribute.DisplayName" xml:space="preserve">
    <value>Attribute</value>
    <comment>DisplayName for DomainRole &apos;Attribute&apos; on DomainRelationship &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassHasAttributes/Attribute.PropertyDisplayName" xml:space="preserve">
    <value>Model Class</value>
    <comment>PropertyDisplayName for DomainRole &apos;Attribute&apos; on DomainRelationship &apos;ClassHasAttributes&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments.DisplayName" xml:space="preserve">
    <value>Model Root Has Comments</value>
    <comment>DisplayName for DomainClass &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments/ModelRoot.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments/ModelRoot.DisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>DisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments/ModelRoot.PropertyDisplayName" xml:space="preserve">
    <value>Comments</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments/Comment.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Comment&apos; on DomainRelationship &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments/Comment.DisplayName" xml:space="preserve">
    <value>Comment</value>
    <comment>DisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasComments/Comment.PropertyDisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>PropertyDisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;ModelRootHasComments&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization.Description" xml:space="preserve">
    <value>Inheritance between Classes.</value>
    <comment>Description for DomainClass &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization.DisplayName" xml:space="preserve">
    <value>Inheritance</value>
    <comment>DisplayName for DomainClass &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Name.Description" xml:space="preserve">
    <value>Solely for display in the object list of the VStudio property window</value>
    <comment>Description for DomainProperty &apos;Name&apos; on DomainClass &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Name.DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>DisplayName for DomainProperty &apos;Name&apos; on DomainClass &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Superclass.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Superclass&apos; on DomainRelationship &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Superclass.DisplayName" xml:space="preserve">
    <value>Base Type</value>
    <comment>DisplayName for DomainRole &apos;Superclass&apos; on DomainRelationship &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Superclass.PropertyDisplayName" xml:space="preserve">
    <value>Subclasses</value>
    <comment>PropertyDisplayName for DomainRole &apos;Superclass&apos; on DomainRelationship &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Subclass.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;Subclass&apos; on DomainRelationship &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Subclass.DisplayName" xml:space="preserve">
    <value>Subclass</value>
    <comment>DisplayName for DomainRole &apos;Subclass&apos; on DomainRelationship &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Generalization/Subclass.PropertyDisplayName" xml:space="preserve">
    <value>Superclass</value>
    <comment>PropertyDisplayName for DomainRole &apos;Subclass&apos; on DomainRelationship &apos;Generalization&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation.DisplayName" xml:space="preserve">
    <value>Bidirectional Association</value>
    <comment>DisplayName for DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyName.Description" xml:space="preserve">
    <value>Name of the entity property that returns the value at this end</value>
    <comment>Description for DomainProperty &apos;SourcePropertyName&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyName.DisplayName" xml:space="preserve">
    <value>End1 Navigation Property</value>
    <comment>DisplayName for DomainProperty &apos;SourcePropertyName&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyName.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourcePropertyName&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceDescription.Description" xml:space="preserve">
    <value>Detailed code documentation for this end of the association</value>
    <comment>Description for DomainProperty &apos;SourceDescription&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceDescription.DisplayName" xml:space="preserve">
    <value>End1 Comment Detail</value>
    <comment>DisplayName for DomainProperty &apos;SourceDescription&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceDescription.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceDescription&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceSummary.Description" xml:space="preserve">
    <value>Short code documentation for this end of the association</value>
    <comment>Description for DomainProperty &apos;SourceSummary&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceSummary.DisplayName" xml:space="preserve">
    <value>End1 Comment Summary</value>
    <comment>DisplayName for DomainProperty &apos;SourceSummary&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceSummary.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceSummary&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceCustomAttributes.Description" xml:space="preserve">
    <value>Any custom attributes to be generated for the source property. Will be passed through as entered.</value>
    <comment>Description for DomainProperty &apos;SourceCustomAttributes&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceCustomAttributes.DisplayName" xml:space="preserve">
    <value>End1 Custom Attributes</value>
    <comment>DisplayName for DomainProperty &apos;SourceCustomAttributes&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceCustomAttributes.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceCustomAttributes&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceDisplayText.Description" xml:space="preserve">
    <value>Text for [Display(Name=&quot;&lt;text&gt;&quot;)] attribute on this end&apos;s property</value>
    <comment>Description for DomainProperty &apos;SourceDisplayText&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceDisplayText.DisplayName" xml:space="preserve">
    <value>End1 Display Text</value>
    <comment>DisplayName for DomainProperty &apos;SourceDisplayText&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceDisplayText.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceDisplayText&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceImplementNotify.Description" xml:space="preserve">
    <value>Should this end participate in INotifyPropertyChanged activities? Only valid for non-collection targets.</value>
    <comment>Description for DomainProperty &apos;SourceImplementNotify&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceImplementNotify.DisplayName" xml:space="preserve">
    <value>Implement INotifyPropertyChanged</value>
    <comment>DisplayName for DomainProperty &apos;SourceImplementNotify&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceImplementNotify.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceImplementNotify&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceImplementNotifyTracking.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.BidirectionalAssociation.Is Source Implement Notify Tracking</value>
    <comment>Description for DomainProperty &apos;IsSourceImplementNotifyTracking&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceImplementNotifyTracking.DisplayName" xml:space="preserve">
    <value>Is Source Implement Notify Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsSourceImplementNotifyTracking&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyNameDisplay.Description" xml:space="preserve">
    <value>Decorator text</value>
    <comment>Description for DomainProperty &apos;SourcePropertyNameDisplay&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyNameDisplay.DisplayName" xml:space="preserve">
    <value>Source Property Name Display</value>
    <comment>DisplayName for DomainProperty &apos;SourcePropertyNameDisplay&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyNameDisplay.Category" xml:space="preserve">
    <value>End 2</value>
    <comment>Category for DomainProperty &apos;SourcePropertyNameDisplay&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyAccessMode.Description" xml:space="preserve">
    <value>Defines how EF reads and write this property or its backing field. See  https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.propertyaccessmode</value>
    <comment>Description for DomainProperty &apos;SourcePropertyAccessMode&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyAccessMode.DisplayName" xml:space="preserve">
    <value>End1 Property Access Mode</value>
    <comment>DisplayName for DomainProperty &apos;SourcePropertyAccessMode&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourcePropertyAccessMode.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourcePropertyAccessMode&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceBackingFieldName.Description" xml:space="preserve">
    <value>The name of the backing field for this property</value>
    <comment>Description for DomainProperty &apos;SourceBackingFieldName&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceBackingFieldName.DisplayName" xml:space="preserve">
    <value>End1 Backing Field</value>
    <comment>DisplayName for DomainProperty &apos;SourceBackingFieldName&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceBackingFieldName.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceBackingFieldName&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceAutoProperty.Description" xml:space="preserve">
    <value>If false, generates a backing field and a partial method to hook getting and setting the property. If true, generates a simple auto property. Only valid for non-collection properties.</value>
    <comment>Description for DomainProperty &apos;SourceAutoProperty&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceAutoProperty.DisplayName" xml:space="preserve">
    <value>End1 Is Auto Property</value>
    <comment>DisplayName for DomainProperty &apos;SourceAutoProperty&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceAutoProperty.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceAutoProperty&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceAutoPropertyTracking.Description" xml:space="preserve">
    <value>If true, Association.SourceAutoProperty tracks ModelClass.AutoPropertyDefault</value>
    <comment>Description for DomainProperty &apos;IsSourceAutoPropertyTracking&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceAutoPropertyTracking.DisplayName" xml:space="preserve">
    <value>Is Source Auto Property Tracking</value>
    <comment>DisplayName for DomainProperty &apos;IsSourceAutoPropertyTracking&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceAbstract.Description" xml:space="preserve">
    <value>If true, the property for this end will be abstract</value>
    <comment>Description for DomainProperty &apos;IsSourceAbstract&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceAbstract.DisplayName" xml:space="preserve">
    <value>End1 Is Abstract</value>
    <comment>DisplayName for DomainProperty &apos;IsSourceAbstract&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/IsSourceAbstract.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;IsSourceAbstract&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceAutoInclude.Description" xml:space="preserve">
    <value>If true, the property at End2 will be automatically included in queries</value>
    <comment>Description for DomainProperty &apos;SourceAutoInclude&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceAutoInclude.DisplayName" xml:space="preserve">
    <value>End1 Auto Include</value>
    <comment>DisplayName for DomainProperty &apos;SourceAutoInclude&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/SourceAutoInclude.Category" xml:space="preserve">
    <value>End 1</value>
    <comment>Category for DomainProperty &apos;SourceAutoInclude&apos; on DomainClass &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/BidirectionalSource.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;BidirectionalSource&apos; on DomainRelationship &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/BidirectionalSource.DisplayName" xml:space="preserve">
    <value>Bidirectional Source</value>
    <comment>DisplayName for DomainRole &apos;BidirectionalSource&apos; on DomainRelationship &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/BidirectionalSource.PropertyDisplayName" xml:space="preserve">
    <value>Bidirectional Targets</value>
    <comment>PropertyDisplayName for DomainRole &apos;BidirectionalSource&apos; on DomainRelationship &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/BidirectionalTarget.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;BidirectionalTarget&apos; on DomainRelationship &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/BidirectionalTarget.DisplayName" xml:space="preserve">
    <value>Bidirectional Target</value>
    <comment>DisplayName for DomainRole &apos;BidirectionalTarget&apos; on DomainRelationship &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalAssociation/BidirectionalTarget.PropertyDisplayName" xml:space="preserve">
    <value>Bidirectional Sources</value>
    <comment>PropertyDisplayName for DomainRole &apos;BidirectionalTarget&apos; on DomainRelationship &apos;BidirectionalAssociation&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums.Description" xml:space="preserve">
    <value>Relationship rooting ModelEnum domain entities to the tree</value>
    <comment>Description for DomainClass &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums.DisplayName" xml:space="preserve">
    <value>Model Root Has Enums</value>
    <comment>DisplayName for DomainClass &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums/ModelRoot.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums/ModelRoot.DisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>DisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums/ModelRoot.PropertyDisplayName" xml:space="preserve">
    <value>Enums</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums/ModelEnum.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for DomainRole &apos;ModelEnum&apos; on DomainRelationship &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums/ModelEnum.DisplayName" xml:space="preserve">
    <value>Enum</value>
    <comment>DisplayName for DomainRole &apos;ModelEnum&apos; on DomainRelationship &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasEnums/ModelEnum.PropertyDisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelEnum&apos; on DomainRelationship &apos;ModelRootHasEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues.Description" xml:space="preserve">
    <value>Relationship linking enumeration values to an enumeration</value>
    <comment>Description for DomainClass &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues.DisplayName" xml:space="preserve">
    <value>Model Enum Has Values</value>
    <comment>DisplayName for DomainClass &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues/Enum.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for DomainRole &apos;Enum&apos; on DomainRelationship &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues/Enum.DisplayName" xml:space="preserve">
    <value>Enum</value>
    <comment>DisplayName for DomainRole &apos;Enum&apos; on DomainRelationship &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues/Enum.PropertyDisplayName" xml:space="preserve">
    <value>Values</value>
    <comment>PropertyDisplayName for DomainRole &apos;Enum&apos; on DomainRelationship &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues/Value.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for DomainRole &apos;Value&apos; on DomainRelationship &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues/Value.DisplayName" xml:space="preserve">
    <value>Value</value>
    <comment>DisplayName for DomainRole &apos;Value&apos; on DomainRelationship &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelEnumHasValues/Value.PropertyDisplayName" xml:space="preserve">
    <value>Enum</value>
    <comment>PropertyDisplayName for DomainRole &apos;Value&apos; on DomainRelationship &apos;ModelEnumHasValues&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ModelRootHasClasses</value>
    <comment>Description for DomainClass &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses.DisplayName" xml:space="preserve">
    <value>Model Root Has Classes</value>
    <comment>DisplayName for DomainClass &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses/ModelRoot.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ModelRootHasClasses.ModelRoot</value>
    <comment>Description for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses/ModelRoot.DisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>DisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses/ModelRoot.PropertyDisplayName" xml:space="preserve">
    <value>Classes</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses/ModelClass.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ModelRootHasClasses.ModelClass</value>
    <comment>Description for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses/ModelClass.DisplayName" xml:space="preserve">
    <value>Model Class</value>
    <comment>DisplayName for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasClasses/ModelClass.PropertyDisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;ModelRootHasClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects</value>
    <comment>Description for DomainClass &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects.DisplayName" xml:space="preserve">
    <value>Comment References Subjects</value>
    <comment>DisplayName for DomainClass &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects/Comment.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects.Comment</value>
    <comment>Description for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects/Comment.DisplayName" xml:space="preserve">
    <value>Comment</value>
    <comment>DisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects/Comment.PropertyDisplayName" xml:space="preserve">
    <value>Subjects</value>
    <comment>PropertyDisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects/DesignElement.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects.DesignElement</value>
    <comment>Description for DomainRole &apos;DesignElement&apos; on DomainRelationship &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects/DesignElement.DisplayName" xml:space="preserve">
    <value>Design Element</value>
    <comment>DisplayName for DomainRole &apos;DesignElement&apos; on DomainRelationship &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesSubjects/DesignElement.PropertyDisplayName" xml:space="preserve">
    <value>Comments</value>
    <comment>PropertyDisplayName for DomainRole &apos;DesignElement&apos; on DomainRelationship &apos;CommentReferencesSubjects&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesClasses</value>
    <comment>Description for DomainClass &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses.DisplayName" xml:space="preserve">
    <value>Comment References Classes</value>
    <comment>DisplayName for DomainClass &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses/Comment.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesClasses.Comment</value>
    <comment>Description for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses/Comment.DisplayName" xml:space="preserve">
    <value>Comment</value>
    <comment>DisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses/Comment.PropertyDisplayName" xml:space="preserve">
    <value>Classes</value>
    <comment>PropertyDisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses/ModelClass.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesClasses.ModelClass</value>
    <comment>Description for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses/ModelClass.DisplayName" xml:space="preserve">
    <value>Model Class</value>
    <comment>DisplayName for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesClasses/ModelClass.PropertyDisplayName" xml:space="preserve">
    <value>Comments</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelClass&apos; on DomainRelationship &apos;CommentReferencesClasses&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesEnums</value>
    <comment>Description for DomainClass &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums.DisplayName" xml:space="preserve">
    <value>Comment References Enums</value>
    <comment>DisplayName for DomainClass &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums/Comment.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesEnums.Comment</value>
    <comment>Description for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums/Comment.DisplayName" xml:space="preserve">
    <value>Comment</value>
    <comment>DisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums/Comment.PropertyDisplayName" xml:space="preserve">
    <value>Enums</value>
    <comment>PropertyDisplayName for DomainRole &apos;Comment&apos; on DomainRelationship &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums/ModelEnum.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.CommentReferencesEnums.ModelEnum</value>
    <comment>Description for DomainRole &apos;ModelEnum&apos; on DomainRelationship &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums/ModelEnum.DisplayName" xml:space="preserve">
    <value>Model Enum</value>
    <comment>DisplayName for DomainRole &apos;ModelEnum&apos; on DomainRelationship &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentReferencesEnums/ModelEnum.PropertyDisplayName" xml:space="preserve">
    <value>Comments</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelEnum&apos; on DomainRelationship &apos;CommentReferencesEnums&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams</value>
    <comment>Description for DomainClass &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams.DisplayName" xml:space="preserve">
    <value>Model Root Has Model Diagrams</value>
    <comment>DisplayName for DomainClass &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams/ModelRoot.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams/ModelRoot.DisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>DisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams/ModelRoot.PropertyDisplayName" xml:space="preserve">
    <value>Diagrams</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelRoot&apos; on DomainRelationship &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams/ModelDiagramData.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams.ModelDiagramData</value>
    <comment>Description for DomainRole &apos;ModelDiagramData&apos; on DomainRelationship &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams/ModelDiagramData.DisplayName" xml:space="preserve">
    <value>Model Diagram Data</value>
    <comment>DisplayName for DomainRole &apos;ModelDiagramData&apos; on DomainRelationship &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ModelRootHasModelDiagrams/ModelDiagramData.PropertyDisplayName" xml:space="preserve">
    <value>Model Root</value>
    <comment>PropertyDisplayName for DomainRole &apos;ModelDiagramData&apos; on DomainRelationship &apos;ModelRootHasModelDiagrams&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Public.DisplayName" xml:space="preserve">
    <value>Public</value>
    <comment>Display name for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Public.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Private.DisplayName" xml:space="preserve">
    <value>Private</value>
    <comment>Display name for EnumerationLiteral &apos;Private&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Private.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Private&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Protected.DisplayName" xml:space="preserve">
    <value>Protected</value>
    <comment>Display name for EnumerationLiteral &apos;Protected&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Protected.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for EnumerationLiteral &apos;Protected&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Internal.DisplayName" xml:space="preserve">
    <value>Internal</value>
    <comment>Display name for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifier/Internal.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;TypeAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.InheritanceModifier/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;InheritanceModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.InheritanceModifier/None.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;InheritanceModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.InheritanceModifier/Abstract.DisplayName" xml:space="preserve">
    <value>Abstract</value>
    <comment>Display name for EnumerationLiteral &apos;Abstract&apos; on DomainEnumeration &apos;InheritanceModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.InheritanceModifier/Abstract.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Abstract&apos; on DomainEnumeration &apos;InheritanceModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.InheritanceModifier/Sealed.DisplayName" xml:space="preserve">
    <value>Sealed</value>
    <comment>Display name for EnumerationLiteral &apos;Sealed&apos; on DomainEnumeration &apos;InheritanceModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.InheritanceModifier/Sealed.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Sealed&apos; on DomainEnumeration &apos;InheritanceModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Multiplicity/ZeroMany.DisplayName" xml:space="preserve">
    <value>ZeroMany</value>
    <comment>Display name for EnumerationLiteral &apos;ZeroMany&apos; on DomainEnumeration &apos;Multiplicity&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Multiplicity/ZeroMany.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;ZeroMany&apos; on DomainEnumeration &apos;Multiplicity&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Multiplicity/One.DisplayName" xml:space="preserve">
    <value>One</value>
    <comment>Display name for EnumerationLiteral &apos;One&apos; on DomainEnumeration &apos;Multiplicity&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Multiplicity/One.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;One&apos; on DomainEnumeration &apos;Multiplicity&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Multiplicity/ZeroOne.DisplayName" xml:space="preserve">
    <value>ZeroOne</value>
    <comment>Display name for EnumerationLiteral &apos;ZeroOne&apos; on DomainEnumeration &apos;Multiplicity&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Multiplicity/ZeroOne.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;ZeroOne&apos; on DomainEnumeration &apos;Multiplicity&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ContainerAccess/Public.DisplayName" xml:space="preserve">
    <value>Public</value>
    <comment>Display name for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;ContainerAccess&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ContainerAccess/Public.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;ContainerAccess&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ContainerAccess/Internal.DisplayName" xml:space="preserve">
    <value>Internal</value>
    <comment>Display name for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;ContainerAccess&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ContainerAccess/Internal.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;ContainerAccess&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DeleteAction/Cascade.DisplayName" xml:space="preserve">
    <value>Cascade</value>
    <comment>Display name for EnumerationLiteral &apos;Cascade&apos; on DomainEnumeration &apos;DeleteAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DeleteAction/Cascade.Description" xml:space="preserve">
    <value>Force a cascade delete across this association</value>
    <comment>Description for EnumerationLiteral &apos;Cascade&apos; on DomainEnumeration &apos;DeleteAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DeleteAction/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;DeleteAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DeleteAction/None.Description" xml:space="preserve">
    <value>Ensure other end is not automatically deleted when one end is deleted.</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;DeleteAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DeleteAction/Default.DisplayName" xml:space="preserve">
    <value>Default</value>
    <comment>Display name for EnumerationLiteral &apos;Default&apos; on DomainEnumeration &apos;DeleteAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DeleteAction/Default.Description" xml:space="preserve">
    <value>Use the default Entity Framework behavior for the type of association</value>
    <comment>Description for EnumerationLiteral &apos;Default&apos; on DomainEnumeration &apos;DeleteAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CollectionType/List.DisplayName" xml:space="preserve">
    <value>List</value>
    <comment>Display name for EnumerationLiteral &apos;List&apos; on DomainEnumeration &apos;CollectionType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CollectionType/List.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for EnumerationLiteral &apos;List&apos; on DomainEnumeration &apos;CollectionType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CollectionType/HashSet.DisplayName" xml:space="preserve">
    <value>HashSet</value>
    <comment>Display name for EnumerationLiteral &apos;HashSet&apos; on DomainEnumeration &apos;CollectionType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CollectionType/HashSet.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for EnumerationLiteral &apos;HashSet&apos; on DomainEnumeration &apos;CollectionType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Int16.DisplayName" xml:space="preserve">
    <value>Int16</value>
    <comment>Display name for EnumerationLiteral &apos;Int16&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Int16.Description" xml:space="preserve">
    <value>short</value>
    <comment>Description for EnumerationLiteral &apos;Int16&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Int32.DisplayName" xml:space="preserve">
    <value>Int32</value>
    <comment>Display name for EnumerationLiteral &apos;Int32&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Int32.Description" xml:space="preserve">
    <value>int</value>
    <comment>Description for EnumerationLiteral &apos;Int32&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Int64.DisplayName" xml:space="preserve">
    <value>Int64</value>
    <comment>Display name for EnumerationLiteral &apos;Int64&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Int64.Description" xml:space="preserve">
    <value>long</value>
    <comment>Description for EnumerationLiteral &apos;Int64&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Byte.DisplayName" xml:space="preserve">
    <value>Byte</value>
    <comment>Display name for EnumerationLiteral &apos;Byte&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/Byte.Description" xml:space="preserve">
    <value>byte</value>
    <comment>Description for EnumerationLiteral &apos;Byte&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/SByte.DisplayName" xml:space="preserve">
    <value>SByte</value>
    <comment>Display name for EnumerationLiteral &apos;SByte&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/SByte.Description" xml:space="preserve">
    <value>sbyte</value>
    <comment>Description for EnumerationLiteral &apos;SByte&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/UInt16.DisplayName" xml:space="preserve">
    <value>UInt16</value>
    <comment>Display name for EnumerationLiteral &apos;UInt16&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/UInt16.Description" xml:space="preserve">
    <value>ushort</value>
    <comment>Description for EnumerationLiteral &apos;UInt16&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/UInt32.DisplayName" xml:space="preserve">
    <value>UInt32</value>
    <comment>Display name for EnumerationLiteral &apos;UInt32&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/UInt32.Description" xml:space="preserve">
    <value>uint</value>
    <comment>Description for EnumerationLiteral &apos;UInt32&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/UInt64.DisplayName" xml:space="preserve">
    <value>UInt64</value>
    <comment>Display name for EnumerationLiteral &apos;UInt64&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumValueType/UInt64.Description" xml:space="preserve">
    <value>ulong</value>
    <comment>Description for EnumerationLiteral &apos;UInt64&apos; on DomainEnumeration &apos;EnumValueType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/CreateDatabaseIfNotExists.DisplayName" xml:space="preserve">
    <value>CreateDatabaseIfNotExists</value>
    <comment>Display name for EnumerationLiteral &apos;CreateDatabaseIfNotExists&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/CreateDatabaseIfNotExists.Description" xml:space="preserve">
    <value>Will recreate and optionally re-seed the database only if the database does not exist.</value>
    <comment>Description for EnumerationLiteral &apos;CreateDatabaseIfNotExists&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/DropCreateDatabaseAlways.DisplayName" xml:space="preserve">
    <value>DropCreateDatabaseAlways</value>
    <comment>Display name for EnumerationLiteral &apos;DropCreateDatabaseAlways&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/DropCreateDatabaseAlways.Description" xml:space="preserve">
    <value>Will always recreate and optionally re-seed the database the first time that a context is used in the app domain.</value>
    <comment>Description for EnumerationLiteral &apos;DropCreateDatabaseAlways&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/DropCreateDatabaseIfModelChanges.DisplayName" xml:space="preserve">
    <value>DropCreateDatabaseIfModelChanges</value>
    <comment>Display name for EnumerationLiteral &apos;DropCreateDatabaseIfModelChanges&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/DropCreateDatabaseIfModelChanges.Description" xml:space="preserve">
    <value>Will delete, recreate, and optionally re-seed the database only if the model has changed since the database was created.</value>
    <comment>Description for EnumerationLiteral &apos;DropCreateDatabaseIfModelChanges&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/MigrateDatabaseToLatestVersion.DisplayName" xml:space="preserve">
    <value>MigrateDatabaseToLatestVersion</value>
    <comment>Display name for EnumerationLiteral &apos;MigrateDatabaseToLatestVersion&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/MigrateDatabaseToLatestVersion.Description" xml:space="preserve">
    <value>Will use Code First Migrations to update the database to the latest version.</value>
    <comment>Description for EnumerationLiteral &apos;MigrateDatabaseToLatestVersion&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseInitializerKind/None.Description" xml:space="preserve">
    <value>Null configuration. Will not check database for correctness, speeding up initialization and queries.</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;DatabaseInitializerKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/None.Description" xml:space="preserve">
    <value>No special meaning</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Color.DisplayName" xml:space="preserve">
    <value>Color</value>
    <comment>Display name for EnumerationLiteral &apos;Color&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Color.Description" xml:space="preserve">
    <value>Value is a color</value>
    <comment>Description for EnumerationLiteral &apos;Color&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Date.DisplayName" xml:space="preserve">
    <value>Date</value>
    <comment>Display name for EnumerationLiteral &apos;Date&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Date.Description" xml:space="preserve">
    <value>Value is a date (consider changing type to DateTime)</value>
    <comment>Description for EnumerationLiteral &apos;Date&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/DateTime.DisplayName" xml:space="preserve">
    <value>DateTime</value>
    <comment>Display name for EnumerationLiteral &apos;DateTime&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/DateTime.Description" xml:space="preserve">
    <value>Value is a date/time (consider changing type to DateTime)</value>
    <comment>Description for EnumerationLiteral &apos;DateTime&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Email.DisplayName" xml:space="preserve">
    <value>Email</value>
    <comment>Display name for EnumerationLiteral &apos;Email&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Email.Description" xml:space="preserve">
    <value>Value is an email address</value>
    <comment>Description for EnumerationLiteral &apos;Email&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Month.DisplayName" xml:space="preserve">
    <value>Month</value>
    <comment>Display name for EnumerationLiteral &apos;Month&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Month.Description" xml:space="preserve">
    <value>Value is a month</value>
    <comment>Description for EnumerationLiteral &apos;Month&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Number.DisplayName" xml:space="preserve">
    <value>Number</value>
    <comment>Display name for EnumerationLiteral &apos;Number&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Number.Description" xml:space="preserve">
    <value>Value is a number (consider changing type to a numeric type)</value>
    <comment>Description for EnumerationLiteral &apos;Number&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Range.DisplayName" xml:space="preserve">
    <value>Range</value>
    <comment>Display name for EnumerationLiteral &apos;Range&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Range.Description" xml:space="preserve">
    <value>Value is a numeric range</value>
    <comment>Description for EnumerationLiteral &apos;Range&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Search.DisplayName" xml:space="preserve">
    <value>Search</value>
    <comment>Display name for EnumerationLiteral &apos;Search&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Search.Description" xml:space="preserve">
    <value>Value will be used in a search predicate</value>
    <comment>Description for EnumerationLiteral &apos;Search&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Telephone.DisplayName" xml:space="preserve">
    <value>Telephone</value>
    <comment>Display name for EnumerationLiteral &apos;Telephone&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Telephone.Description" xml:space="preserve">
    <value>Value is a telephone number</value>
    <comment>Description for EnumerationLiteral &apos;Telephone&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Time.DisplayName" xml:space="preserve">
    <value>Time</value>
    <comment>Display name for EnumerationLiteral &apos;Time&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Time.Description" xml:space="preserve">
    <value>Value is a time</value>
    <comment>Description for EnumerationLiteral &apos;Time&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/URl.DisplayName" xml:space="preserve">
    <value>URl</value>
    <comment>Display name for EnumerationLiteral &apos;URl&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/URl.Description" xml:space="preserve">
    <value>Value is a URL</value>
    <comment>Description for EnumerationLiteral &apos;URl&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Week.DisplayName" xml:space="preserve">
    <value>Week</value>
    <comment>Display name for EnumerationLiteral &apos;Week&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Week.Description" xml:space="preserve">
    <value>Value is a calendar week</value>
    <comment>Description for EnumerationLiteral &apos;Week&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Password.DisplayName" xml:space="preserve">
    <value>Password</value>
    <comment>Display name for EnumerationLiteral &apos;Password&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.HTML5Type/Password.Description" xml:space="preserve">
    <value>Value is a password</value>
    <comment>Description for EnumerationLiteral &apos;Password&apos; on DomainEnumeration &apos;HTML5Type&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Concurrency/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;Concurrency&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Concurrency/None.Description" xml:space="preserve">
    <value>Don&apos;t generate code to handle concurrency</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;Concurrency&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Concurrency/Optimistic.DisplayName" xml:space="preserve">
    <value>Optimistic</value>
    <comment>Display name for EnumerationLiteral &apos;Optimistic&apos; on DomainEnumeration &apos;Concurrency&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.Concurrency/Optimistic.Description" xml:space="preserve">
    <value>Generate timestamp columns to handle optimistic concurrency</value>
    <comment>Description for EnumerationLiteral &apos;Optimistic&apos; on DomainEnumeration &apos;Concurrency&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ConcurrencyOverride/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;ConcurrencyOverride&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ConcurrencyOverride/None.Description" xml:space="preserve">
    <value>Don&apos;t generate code to handle concurrency</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;ConcurrencyOverride&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ConcurrencyOverride/Optimistic.DisplayName" xml:space="preserve">
    <value>Optimistic</value>
    <comment>Display name for EnumerationLiteral &apos;Optimistic&apos; on DomainEnumeration &apos;ConcurrencyOverride&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ConcurrencyOverride/Optimistic.Description" xml:space="preserve">
    <value>Generate timestamp columns to handle optimistic concurrency</value>
    <comment>Description for EnumerationLiteral &apos;Optimistic&apos; on DomainEnumeration &apos;ConcurrencyOverride&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ConcurrencyOverride/Default.DisplayName" xml:space="preserve">
    <value>Default</value>
    <comment>Display name for EnumerationLiteral &apos;Default&apos; on DomainEnumeration &apos;ConcurrencyOverride&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ConcurrencyOverride/Default.Description" xml:space="preserve">
    <value>Use default for model</value>
    <comment>Description for EnumerationLiteral &apos;Default&apos; on DomainEnumeration &apos;ConcurrencyOverride&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFVersion/EF6.DisplayName" xml:space="preserve">
    <value>EF6</value>
    <comment>Display name for EnumerationLiteral &apos;EF6&apos; on DomainEnumeration &apos;EFVersion&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFVersion/EF6.Description" xml:space="preserve">
    <value>Entity Framework 6</value>
    <comment>Description for EnumerationLiteral &apos;EF6&apos; on DomainEnumeration &apos;EFVersion&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFVersion/EFCore.DisplayName" xml:space="preserve">
    <value>EFCore</value>
    <comment>Display name for EnumerationLiteral &apos;EFCore&apos; on DomainEnumeration &apos;EFVersion&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFVersion/EFCore.Description" xml:space="preserve">
    <value>Entity Framework Core</value>
    <comment>Description for EnumerationLiteral &apos;EFCore&apos; on DomainEnumeration &apos;EFVersion&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.IdentityType/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;IdentityType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.IdentityType/None.Description" xml:space="preserve">
    <value>The associated property is not an identity</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;IdentityType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.IdentityType/AutoGenerated.DisplayName" xml:space="preserve">
    <value>AutoGenerated</value>
    <comment>Display name for EnumerationLiteral &apos;AutoGenerated&apos; on DomainEnumeration &apos;IdentityType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.IdentityType/AutoGenerated.Description" xml:space="preserve">
    <value>The value will be automatically generated in the database</value>
    <comment>Description for EnumerationLiteral &apos;AutoGenerated&apos; on DomainEnumeration &apos;IdentityType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.IdentityType/Manual.DisplayName" xml:space="preserve">
    <value>Manual</value>
    <comment>Display name for EnumerationLiteral &apos;Manual&apos; on DomainEnumeration &apos;IdentityType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.IdentityType/Manual.Description" xml:space="preserve">
    <value>The value will be entered by the program</value>
    <comment>Description for EnumerationLiteral &apos;Manual&apos; on DomainEnumeration &apos;IdentityType&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.SetterAccessModifier/Public.DisplayName" xml:space="preserve">
    <value>Public</value>
    <comment>Display name for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;SetterAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.SetterAccessModifier/Public.Description" xml:space="preserve">
    <value>Property is public</value>
    <comment>Description for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;SetterAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.SetterAccessModifier/Protected.DisplayName" xml:space="preserve">
    <value>Protected</value>
    <comment>Display name for EnumerationLiteral &apos;Protected&apos; on DomainEnumeration &apos;SetterAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.SetterAccessModifier/Protected.Description" xml:space="preserve">
    <value>Property is protected</value>
    <comment>Description for EnumerationLiteral &apos;Protected&apos; on DomainEnumeration &apos;SetterAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.SetterAccessModifier/Internal.DisplayName" xml:space="preserve">
    <value>Internal</value>
    <comment>Display name for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;SetterAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.SetterAccessModifier/Internal.Description" xml:space="preserve">
    <value>Property is internal</value>
    <comment>Description for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;SetterAccessModifier&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CodeStrategy/TablePerType.DisplayName" xml:space="preserve">
    <value>TablePerType</value>
    <comment>Display name for EnumerationLiteral &apos;TablePerType&apos; on DomainEnumeration &apos;CodeStrategy&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CodeStrategy/TablePerType.Description" xml:space="preserve">
    <value>A table will be used for every class</value>
    <comment>Description for EnumerationLiteral &apos;TablePerType&apos; on DomainEnumeration &apos;CodeStrategy&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CodeStrategy/TablePerConcreteType.DisplayName" xml:space="preserve">
    <value>TablePerConcreteType</value>
    <comment>Display name for EnumerationLiteral &apos;TablePerConcreteType&apos; on DomainEnumeration &apos;CodeStrategy&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CodeStrategy/TablePerConcreteType.Description" xml:space="preserve">
    <value>Only concrete (not abstract) classes will have tables</value>
    <comment>Description for EnumerationLiteral &apos;TablePerConcreteType&apos; on DomainEnumeration &apos;CodeStrategy&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CodeStrategy/TablePerHierarchy.DisplayName" xml:space="preserve">
    <value>TablePerHierarchy</value>
    <comment>Display name for EnumerationLiteral &apos;TablePerHierarchy&apos; on DomainEnumeration &apos;CodeStrategy&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CodeStrategy/TablePerHierarchy.Description" xml:space="preserve">
    <value>A table will be used for every inheritance chain</value>
    <comment>Description for EnumerationLiteral &apos;TablePerHierarchy&apos; on DomainEnumeration &apos;CodeStrategy&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/Dependent.DisplayName" xml:space="preserve">
    <value>Dependent</value>
    <comment>Display name for EnumerationLiteral &apos;Dependent&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/Dependent.Description" xml:space="preserve">
    <value>Class is the dependent part of the association</value>
    <comment>Description for EnumerationLiteral &apos;Dependent&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/Principal.DisplayName" xml:space="preserve">
    <value>Principal</value>
    <comment>Display name for EnumerationLiteral &apos;Principal&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/Principal.Description" xml:space="preserve">
    <value>Class is the controlling (i.e, principal) part of the association</value>
    <comment>Description for EnumerationLiteral &apos;Principal&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/NotApplicable.DisplayName" xml:space="preserve">
    <value>NotApplicable</value>
    <comment>Display name for EnumerationLiteral &apos;NotApplicable&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/NotApplicable.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.EndpointRole.NotApplicable</value>
    <comment>Description for EnumerationLiteral &apos;NotApplicable&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/NotSet.DisplayName" xml:space="preserve">
    <value>NotSet</value>
    <comment>Display name for EnumerationLiteral &apos;NotSet&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EndpointRole/NotSet.Description" xml:space="preserve">
    <value>Dependent/Principal roles are design decisions and have not been set</value>
    <comment>Description for EnumerationLiteral &apos;NotSet&apos; on DomainEnumeration &apos;EndpointRole&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ForeignKeyOwner/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;ForeignKeyOwner&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ForeignKeyOwner/None.Description" xml:space="preserve">
    <value>No foreign key should be generated</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;ForeignKeyOwner&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ForeignKeyOwner/Source.DisplayName" xml:space="preserve">
    <value>Source</value>
    <comment>Display name for EnumerationLiteral &apos;Source&apos; on DomainEnumeration &apos;ForeignKeyOwner&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ForeignKeyOwner/Source.Description" xml:space="preserve">
    <value>Foreign key is contained in the Source class</value>
    <comment>Description for EnumerationLiteral &apos;Source&apos; on DomainEnumeration &apos;ForeignKeyOwner&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ForeignKeyOwner/Target.DisplayName" xml:space="preserve">
    <value>Target</value>
    <comment>Display name for EnumerationLiteral &apos;Target&apos; on DomainEnumeration &apos;ForeignKeyOwner&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ForeignKeyOwner/Target.Description" xml:space="preserve">
    <value>Foreign key is contained in the Target class</value>
    <comment>Description for EnumerationLiteral &apos;Target&apos; on DomainEnumeration &apos;ForeignKeyOwner&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseKind/SqlServer.DisplayName" xml:space="preserve">
    <value>SqlServer</value>
    <comment>Display name for EnumerationLiteral &apos;SqlServer&apos; on DomainEnumeration &apos;DatabaseKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseKind/SqlServer.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.DatabaseKind.SqlServer</value>
    <comment>Description for EnumerationLiteral &apos;SqlServer&apos; on DomainEnumeration &apos;DatabaseKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseKind/SqlServer2012.DisplayName" xml:space="preserve">
    <value>SqlServer2012</value>
    <comment>Display name for EnumerationLiteral &apos;SqlServer2012&apos; on DomainEnumeration &apos;DatabaseKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseKind/SqlServer2012.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.DatabaseKind.SqlServer2012</value>
    <comment>Description for EnumerationLiteral &apos;SqlServer2012&apos; on DomainEnumeration &apos;DatabaseKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseKind/None.DisplayName" xml:space="preserve">
    <value>None</value>
    <comment>Display name for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;DatabaseKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.DatabaseKind/None.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.DatabaseKind.None</value>
    <comment>Description for EnumerationLiteral &apos;None&apos; on DomainEnumeration &apos;DatabaseKind&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BoolToZeroOneConverter.DisplayName" xml:space="preserve">
    <value>BoolToZeroOneConverter</value>
    <comment>Display name for EnumerationLiteral &apos;BoolToZeroOneConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BoolToZeroOneConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.BoolToZeroOneConverter</value>
    <comment>Description for EnumerationLiteral &apos;BoolToZeroOneConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BoolToStringConverter.DisplayName" xml:space="preserve">
    <value>BoolToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;BoolToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BoolToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.BoolToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;BoolToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BoolToTwoValuesConverter.DisplayName" xml:space="preserve">
    <value>BoolToTwoValuesConverter</value>
    <comment>Display name for EnumerationLiteral &apos;BoolToTwoValuesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BoolToTwoValuesConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.BoolToTwoValuesConverter</value>
    <comment>Description for EnumerationLiteral &apos;BoolToTwoValuesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BytesToStringConverter.DisplayName" xml:space="preserve">
    <value>BytesToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;BytesToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/BytesToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.BytesToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;BytesToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/CastingConverter.DisplayName" xml:space="preserve">
    <value>CastingConverter</value>
    <comment>Display name for EnumerationLiteral &apos;CastingConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/CastingConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.CastingConverter</value>
    <comment>Description for EnumerationLiteral &apos;CastingConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/CharToStringConverter.DisplayName" xml:space="preserve">
    <value>CharToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;CharToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/CharToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.CharToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;CharToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeOffsetToBinaryConverter.DisplayName" xml:space="preserve">
    <value>DateTimeOffsetToBinaryConverter</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeOffsetToBinaryConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeOffsetToBinaryConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.DateTimeOffsetToBinaryConverter</value>
    <comment>Description for EnumerationLiteral &apos;DateTimeOffsetToBinaryConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeOffsetToBytesConverter.DisplayName" xml:space="preserve">
    <value>DateTimeOffsetToBytesConverter</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeOffsetToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeOffsetToBytesConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.DateTimeOffsetToBytesConverter</value>
    <comment>Description for EnumerationLiteral &apos;DateTimeOffsetToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeOffsetToStringConverter.DisplayName" xml:space="preserve">
    <value>DateTimeOffsetToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeOffsetToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeOffsetToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.DateTimeOffsetToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;DateTimeOffsetToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeToBinaryConverter.DisplayName" xml:space="preserve">
    <value>DateTimeToBinaryConverter</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeToBinaryConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeToBinaryConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.DateTimeToBinaryConverter</value>
    <comment>Description for EnumerationLiteral &apos;DateTimeToBinaryConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeToStringConverter.DisplayName" xml:space="preserve">
    <value>DateTimeToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.DateTimeToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;DateTimeToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeToTicksConverter.DisplayName" xml:space="preserve">
    <value>DateTimeToTicksConverter</value>
    <comment>Display name for EnumerationLiteral &apos;DateTimeToTicksConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/DateTimeToTicksConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.DateTimeToTicksConverter</value>
    <comment>Description for EnumerationLiteral &apos;DateTimeToTicksConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/EnumToNumberConverter.DisplayName" xml:space="preserve">
    <value>EnumToNumberConverter</value>
    <comment>Display name for EnumerationLiteral &apos;EnumToNumberConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/EnumToNumberConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.EnumToNumberConverter</value>
    <comment>Description for EnumerationLiteral &apos;EnumToNumberConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/EnumToStringConverter.DisplayName" xml:space="preserve">
    <value>EnumToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;EnumToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/EnumToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.EnumToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;EnumToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/GuidToBytesConverter.DisplayName" xml:space="preserve">
    <value>GuidToBytesConverter</value>
    <comment>Display name for EnumerationLiteral &apos;GuidToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/GuidToBytesConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.GuidToBytesConverter</value>
    <comment>Description for EnumerationLiteral &apos;GuidToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/GuidToStringConverter.DisplayName" xml:space="preserve">
    <value>GuidToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;GuidToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/GuidToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.GuidToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;GuidToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/NumberToBytesConverter.DisplayName" xml:space="preserve">
    <value>NumberToBytesConverter</value>
    <comment>Display name for EnumerationLiteral &apos;NumberToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/NumberToBytesConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.NumberToBytesConverter</value>
    <comment>Description for EnumerationLiteral &apos;NumberToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/NumberToStringConverter.DisplayName" xml:space="preserve">
    <value>NumberToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;NumberToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/NumberToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.NumberToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;NumberToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/StringToBytesConverter.DisplayName" xml:space="preserve">
    <value>StringToBytesConverter</value>
    <comment>Display name for EnumerationLiteral &apos;StringToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/StringToBytesConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.StringToBytesConverter</value>
    <comment>Description for EnumerationLiteral &apos;StringToBytesConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/TimeSpanToStringConverter.DisplayName" xml:space="preserve">
    <value>TimeSpanToStringConverter</value>
    <comment>Display name for EnumerationLiteral &apos;TimeSpanToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/TimeSpanToStringConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.TimeSpanToStringConverter</value>
    <comment>Description for EnumerationLiteral &apos;TimeSpanToStringConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/TimeSpanToTicksConverter.DisplayName" xml:space="preserve">
    <value>TimeSpanToTicksConverter</value>
    <comment>Display name for EnumerationLiteral &apos;TimeSpanToTicksConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ValueConverter/TimeSpanToTicksConverter.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.ValueConverter.TimeSpanToTicksConverter</value>
    <comment>Description for EnumerationLiteral &apos;TimeSpanToTicksConverter&apos; on DomainEnumeration &apos;ValueConverter&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AutomaticAction/False.DisplayName" xml:space="preserve">
    <value>False</value>
    <comment>Display name for EnumerationLiteral &apos;False&apos; on DomainEnumeration &apos;AutomaticAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AutomaticAction/False.Description" xml:space="preserve">
    <value>Never perform the action automatically</value>
    <comment>Description for EnumerationLiteral &apos;False&apos; on DomainEnumeration &apos;AutomaticAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AutomaticAction/True.DisplayName" xml:space="preserve">
    <value>True</value>
    <comment>Display name for EnumerationLiteral &apos;True&apos; on DomainEnumeration &apos;AutomaticAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AutomaticAction/True.Description" xml:space="preserve">
    <value>Always perform the action automatically</value>
    <comment>Description for EnumerationLiteral &apos;True&apos; on DomainEnumeration &apos;AutomaticAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AutomaticAction/Ask.DisplayName" xml:space="preserve">
    <value>Ask</value>
    <comment>Display name for EnumerationLiteral &apos;Ask&apos; on DomainEnumeration &apos;AutomaticAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AutomaticAction/Ask.Description" xml:space="preserve">
    <value>Ask each time if should perform the action automatically</value>
    <comment>Description for EnumerationLiteral &apos;Ask&apos; on DomainEnumeration &apos;AutomaticAction&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/Field.DisplayName" xml:space="preserve">
    <value>Field</value>
    <comment>Display name for EnumerationLiteral &apos;Field&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/Field.Description" xml:space="preserve">
    <value>Enforces that all accesses to the property must go through the field. An exception will be thrown if this mode is set and it is not possible to read from or write to the field.</value>
    <comment>Description for EnumerationLiteral &apos;Field&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/FieldDuringConstruction.DisplayName" xml:space="preserve">
    <value>FieldDuringConstruction</value>
    <comment>Display name for EnumerationLiteral &apos;FieldDuringConstruction&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/FieldDuringConstruction.Description" xml:space="preserve">
    <value>Enforces that all accesses to the property must go through the field when new instances are being constructed. New instances are typically constructed when entities are queried from the database. An exception will be thrown if this mode is set and it is not possible to write to the field. All other uses of the property will go through the property getters and setters, unless this is not possible because, for example, the property is read-only, in which case these accesses will also use the field.</value>
    <comment>Description for EnumerationLiteral &apos;FieldDuringConstruction&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/PreferField.DisplayName" xml:space="preserve">
    <value>PreferField</value>
    <comment>Display name for EnumerationLiteral &apos;PreferField&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/PreferField.Description" xml:space="preserve">
    <value>All accesses to the property goes directly to the field, unless the field is not known, in which as access goes through the property.</value>
    <comment>Description for EnumerationLiteral &apos;PreferField&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/PreferFieldDuringConstruction.DisplayName" xml:space="preserve">
    <value>PreferFieldDuringConstruction</value>
    <comment>Display name for EnumerationLiteral &apos;PreferFieldDuringConstruction&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/PreferFieldDuringConstruction.Description" xml:space="preserve">
    <value>All accesses to the property when constructing new entity instances goes directly to the field, unless the field is not known, in which as access goes through the property. All other uses of the property will go through the property getters and setters, unless this is not possible because, for example, the property is read-only, in which case these accesses will also use the field.</value>
    <comment>Description for EnumerationLiteral &apos;PreferFieldDuringConstruction&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/PreferProperty.DisplayName" xml:space="preserve">
    <value>PreferProperty</value>
    <comment>Display name for EnumerationLiteral &apos;PreferProperty&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/PreferProperty.Description" xml:space="preserve">
    <value>All accesses to the property go through the property, unless there is no property or it is missing a setter/getter, in which as access goes directly to the field.</value>
    <comment>Description for EnumerationLiteral &apos;PreferProperty&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/Property.DisplayName" xml:space="preserve">
    <value>Property</value>
    <comment>Display name for EnumerationLiteral &apos;Property&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyAccessMode/Property.Description" xml:space="preserve">
    <value>Enforces that all accesses to the property must go through the property getters and setters, even when new objects are being constructed. An exception will be thrown if this mode is set and it is not possible to read from or write to the property, for example because it is read-only.</value>
    <comment>Description for EnumerationLiteral &apos;Property&apos; on DomainEnumeration &apos;PropertyAccessMode&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyExposure/Property.DisplayName" xml:space="preserve">
    <value>Property</value>
    <comment>Display name for EnumerationLiteral &apos;Property&apos; on DomainEnumeration &apos;PropertyExposure&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyExposure/Property.Description" xml:space="preserve">
    <value>Generated code will create and use this attribute as a .NET property,</value>
    <comment>Description for EnumerationLiteral &apos;Property&apos; on DomainEnumeration &apos;PropertyExposure&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyExposure/Field.DisplayName" xml:space="preserve">
    <value>Field</value>
    <comment>Display name for EnumerationLiteral &apos;Field&apos; on DomainEnumeration &apos;PropertyExposure&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.PropertyExposure/Field.Description" xml:space="preserve">
    <value>Generated code will create and use this attribute as a .NET field</value>
    <comment>Description for EnumerationLiteral &apos;Field&apos; on DomainEnumeration &apos;PropertyExposure&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Internal.DisplayName" xml:space="preserve">
    <value>Internal</value>
    <comment>Display name for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Internal.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for EnumerationLiteral &apos;Internal&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Private.DisplayName" xml:space="preserve">
    <value>Private</value>
    <comment>Display name for EnumerationLiteral &apos;Private&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Private.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Private&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Protected.DisplayName" xml:space="preserve">
    <value>Protected</value>
    <comment>Display name for EnumerationLiteral &apos;Protected&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Protected.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for EnumerationLiteral &apos;Protected&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Public.DisplayName" xml:space="preserve">
    <value>Public</value>
    <comment>Display name for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Public.Description" xml:space="preserve">
    <value></value>
    <comment>Description for EnumerationLiteral &apos;Public&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Default.DisplayName" xml:space="preserve">
    <value>Default</value>
    <comment>Display name for EnumerationLiteral &apos;Default&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt/Default.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.TypeAccessModifierExt.Default</value>
    <comment>Description for EnumerationLiteral &apos;Default&apos; on DomainEnumeration &apos;TypeAccessModifierExt&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ShadowKeyPattern/TableColumn.DisplayName" xml:space="preserve">
    <value>TableColumn</value>
    <comment>Display name for EnumerationLiteral &apos;TableColumn&apos; on DomainEnumeration &apos;ShadowKeyPattern&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ShadowKeyPattern/TableColumn.Description" xml:space="preserve">
    <value>Generate as [Foreign Table][Key Column]</value>
    <comment>Description for EnumerationLiteral &apos;TableColumn&apos; on DomainEnumeration &apos;ShadowKeyPattern&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ShadowKeyPattern/TableUnderscoreColumn.DisplayName" xml:space="preserve">
    <value>TableUnderscoreColumn</value>
    <comment>Display name for EnumerationLiteral &apos;TableUnderscoreColumn&apos; on DomainEnumeration &apos;ShadowKeyPattern&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ShadowKeyPattern/TableUnderscoreColumn.Description" xml:space="preserve">
    <value>Generate as [Foreign Table]_[Key Column]</value>
    <comment>Description for EnumerationLiteral &apos;TableUnderscoreColumn&apos; on DomainEnumeration &apos;ShadowKeyPattern&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape.DisplayName" xml:space="preserve">
    <value>Class Shape</value>
    <comment>DisplayName for DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/FillColor.Description" xml:space="preserve">
    <value>Fill color for shape when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;FillColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/FillColor.DisplayName" xml:space="preserve">
    <value>Fill Color</value>
    <comment>DisplayName for DomainProperty &apos;FillColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/FillColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;FillColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/TextColor.Description" xml:space="preserve">
    <value>Color of the shape&apos;s text when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/TextColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;TextColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineColor.Description" xml:space="preserve">
    <value>Color of the shape&apos;s outline when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineColor.DisplayName" xml:space="preserve">
    <value>Outline Color</value>
    <comment>DisplayName for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineDashStyle.Description" xml:space="preserve">
    <value>Line style for the shape&apos;s outline</value>
    <comment>Description for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineDashStyle.DisplayName" xml:space="preserve">
    <value>Outline Dash Style</value>
    <comment>DisplayName for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineDashStyle.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/Visible.Description" xml:space="preserve">
    <value>If true, shape is visible.</value>
    <comment>Description for DomainProperty &apos;Visible&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/Visible.DisplayName" xml:space="preserve">
    <value>Visible</value>
    <comment>DisplayName for DomainProperty &apos;Visible&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/Visible.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;Visible&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineThickness.Description" xml:space="preserve">
    <value>Thickness, in inches, of the shapes&apos;s outline</value>
    <comment>Description for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineThickness.DisplayName" xml:space="preserve">
    <value>Outline Thickness</value>
    <comment>DisplayName for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.ClassShape/OutlineThickness.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;ClassShape&apos;</comment>
  </data>
  <data name="ClassShapeAttributesCompartmentTitle" xml:space="preserve">
    <value>Properties</value>
    <comment>Compartment title</comment>
  </data>
  <data name="ClassShapeAssociationsCompartmentTitle" xml:space="preserve">
    <value>Association Targets</value>
    <comment>Compartment title</comment>
  </data>
  <data name="ClassShapeSourcesCompartmentTitle" xml:space="preserve">
    <value>Association Sources</value>
    <comment>Compartment title</comment>
  </data>
  <data name="ClassShapeNameDefaultText" xml:space="preserve">
    <value>Name</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape.DisplayName" xml:space="preserve">
    <value>Comment Box Shape</value>
    <comment>DisplayName for DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/FillColor.Description" xml:space="preserve">
    <value>Fill color for the shape when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;FillColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/FillColor.DisplayName" xml:space="preserve">
    <value>Fill Color</value>
    <comment>DisplayName for DomainProperty &apos;FillColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/FillColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;FillColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineColor.Description" xml:space="preserve">
    <value>Color of the shape&apos;s outline when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineColor.DisplayName" xml:space="preserve">
    <value>Outline Color</value>
    <comment>DisplayName for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/TextColor.Description" xml:space="preserve">
    <value>Color of the shape&apos;s text when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/TextColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;TextColor&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineDashStyle.Description" xml:space="preserve">
    <value>Line style for the shape&apos;s outline</value>
    <comment>Description for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineDashStyle.DisplayName" xml:space="preserve">
    <value>Outline Dash Style</value>
    <comment>DisplayName for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineDashStyle.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineThickness.Description" xml:space="preserve">
    <value>Thickness, in inches, of the shapes&apos;s outline</value>
    <comment>Description for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineThickness.DisplayName" xml:space="preserve">
    <value>Outline Thickness</value>
    <comment>DisplayName for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/OutlineThickness.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/Visible.Description" xml:space="preserve">
    <value>If true, shape is visible.</value>
    <comment>Description for DomainProperty &apos;Visible&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/Visible.DisplayName" xml:space="preserve">
    <value>Visible</value>
    <comment>DisplayName for DomainProperty &apos;Visible&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentBoxShape/Visible.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;Visible&apos; on DomainClass &apos;CommentBoxShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape.DisplayName" xml:space="preserve">
    <value>Enum Shape</value>
    <comment>DisplayName for DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/FillColor.Description" xml:space="preserve">
    <value>Fill color for shape when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/FillColor.DisplayName" xml:space="preserve">
    <value>Fill Color</value>
    <comment>DisplayName for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/FillColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/TextColor.Description" xml:space="preserve">
    <value>Color of the shape&apos;s text when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/TextColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineColor.Description" xml:space="preserve">
    <value>Color of the shape&apos;s outline when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineColor.DisplayName" xml:space="preserve">
    <value>Outline Color</value>
    <comment>DisplayName for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineColor.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineColor&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/Visible.Description" xml:space="preserve">
    <value>If true, shape is visible.</value>
    <comment>Description for DomainProperty &apos;Visible&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/Visible.DisplayName" xml:space="preserve">
    <value>Visible</value>
    <comment>DisplayName for DomainProperty &apos;Visible&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/Visible.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;Visible&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineThickness.Description" xml:space="preserve">
    <value>Thickness, in inches, of the shapes&apos;s outline</value>
    <comment>Description for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineThickness.DisplayName" xml:space="preserve">
    <value>Outline Thickness</value>
    <comment>DisplayName for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineThickness.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineThickness&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineDashStyle.Description" xml:space="preserve">
    <value>Line style for the shape&apos;s outline</value>
    <comment>Description for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineDashStyle.DisplayName" xml:space="preserve">
    <value>Outline Dash Style</value>
    <comment>DisplayName for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EnumShape/OutlineDashStyle.Category" xml:space="preserve">
    <value>Display</value>
    <comment>Category for DomainProperty &apos;OutlineDashStyle&apos; on DomainClass &apos;EnumShape&apos;</comment>
  </data>
  <data name="EnumShapeValuesCompartmentTitle" xml:space="preserve">
    <value>Values</value>
    <comment>Compartment title</comment>
  </data>
  <data name="EnumShapeNameDefaultText" xml:space="preserve">
    <value>Name</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector.DisplayName" xml:space="preserve">
    <value>Association Connector</value>
    <comment>DisplayName for DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector/Color.Description" xml:space="preserve">
    <value>The connector&apos;s color when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;Color&apos; on DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector/Color.DisplayName" xml:space="preserve">
    <value>Color</value>
    <comment>DisplayName for DomainProperty &apos;Color&apos; on DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector/DashStyle.Description" xml:space="preserve">
    <value>No description available</value>
    <comment>Description for DomainProperty &apos;DashStyle&apos; on DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector/DashStyle.DisplayName" xml:space="preserve">
    <value>Dash Style</value>
    <comment>DisplayName for DomainProperty &apos;DashStyle&apos; on DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector/TextColor.Description" xml:space="preserve">
    <value>The connector&apos;s text color when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.AssociationConnector/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;AssociationConnector&apos;</comment>
  </data>
  <data name="AssociationConnectorTargetPropertyNameDisplayDefaultText" xml:space="preserve">
    <value>TargetPropertyNameDisplay</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="AssociationConnectorSourceMultiplicityDisplayDefaultText" xml:space="preserve">
    <value>SourceMultiplicityDisplay</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="AssociationConnectorTargetMultiplicityDisplayDefaultText" xml:space="preserve">
    <value>TargetMultiplicityDisplay</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalConnector.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;UnidirectionalConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.UnidirectionalConnector.DisplayName" xml:space="preserve">
    <value>Unidirectional Connector</value>
    <comment>DisplayName for DomainClass &apos;UnidirectionalConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalConnector.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;BidirectionalConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.BidirectionalConnector.DisplayName" xml:space="preserve">
    <value>Bidirectional Connector</value>
    <comment>DisplayName for DomainClass &apos;BidirectionalConnector&apos;</comment>
  </data>
  <data name="BidirectionalConnectorSourcePropertyNameDisplayDefaultText" xml:space="preserve">
    <value>SourcePropertyNameDisplay</value>
    <comment>Text decorator default text</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.GeneralizationConnector.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;GeneralizationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.GeneralizationConnector.DisplayName" xml:space="preserve">
    <value>Generalization Connector</value>
    <comment>DisplayName for DomainClass &apos;GeneralizationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.GeneralizationConnector/Color.Description" xml:space="preserve">
    <value>The line color when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;Color&apos; on DomainClass &apos;GeneralizationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.GeneralizationConnector/Color.DisplayName" xml:space="preserve">
    <value>Color</value>
    <comment>DisplayName for DomainProperty &apos;Color&apos; on DomainClass &apos;GeneralizationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.GeneralizationConnector/TextColor.Description" xml:space="preserve">
    <value>Description for Sawczyn.EFDesigner.EFModel.GeneralizationConnector.Text Color</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;GeneralizationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.GeneralizationConnector/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;GeneralizationConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentConnector.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;CommentConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentConnector.DisplayName" xml:space="preserve">
    <value>Comment Connector</value>
    <comment>DisplayName for DomainClass &apos;CommentConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentConnector/Color.Description" xml:space="preserve">
    <value>The color of the comment connector when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;Color&apos; on DomainClass &apos;CommentConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentConnector/Color.DisplayName" xml:space="preserve">
    <value>Color</value>
    <comment>DisplayName for DomainProperty &apos;Color&apos; on DomainClass &apos;CommentConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentConnector/TextColor.Description" xml:space="preserve">
    <value>The color of the connector&apos;s text when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;CommentConnector&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.CommentConnector/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;CommentConnector&apos;</comment>
  </data>
  <data name="FormatList" xml:space="preserve">
    <value>Entity Framework Visual Editor (*.efmodel)|*.efmodel</value>
    <comment>A list of file format specifiers for the Save dialog box</comment>
  </data>
  <data name="ModelExplorerTitle" xml:space="preserve">
    <value>Entity Model Explorer</value>
    <comment>Model Explorer Toolwindow title</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDiagram.Description" xml:space="preserve">
    <value></value>
    <comment>Description for DomainClass &apos;EFModelDiagram&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDiagram.DisplayName" xml:space="preserve">
    <value>Class Diagram</value>
    <comment>DisplayName for DomainClass &apos;EFModelDiagram&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDiagram/FillColor.Description" xml:space="preserve">
    <value>The background color when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EFModelDiagram&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDiagram/FillColor.DisplayName" xml:space="preserve">
    <value>Fill Color</value>
    <comment>DisplayName for DomainProperty &apos;FillColor&apos; on DomainClass &apos;EFModelDiagram&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDiagram/TextColor.Description" xml:space="preserve">
    <value>The text color when using a theme with a light background.</value>
    <comment>Description for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EFModelDiagram&apos;</comment>
  </data>
  <data name="Sawczyn.EFDesigner.EFModel.EFModelDiagram/TextColor.DisplayName" xml:space="preserve">
    <value>Text Color</value>
    <comment>DisplayName for DomainProperty &apos;TextColor&apos; on DomainClass &apos;EFModelDiagram&apos;</comment>
  </data>
  <data name="EF Model DiagramsToolboxTab" xml:space="preserve">
    <value>EF Model Diagrams</value>
    <comment>Toolbox item tab name</comment>
  </data>
  <data name="ModelClassToolboxItem" xml:space="preserve">
    <value>Entity</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="ModelClassToolboxTooltip" xml:space="preserve">
    <value>Create a persistent entity</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="UnidirectionalAssociationToolboxItem" xml:space="preserve">
    <value>Unidirectional Association</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="UnidirectionalAssociationToolboxTooltip" xml:space="preserve">
    <value>Create a link between two entities with a navigation property on one side only</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="BidirectionalAssociationToolboxItem" xml:space="preserve">
    <value>Bidirectional Association</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="BidirectionalAssociationToolboxTooltip" xml:space="preserve">
    <value>Create a link between two entities with navigation properties on both sides</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="GeneralizationToolboxItem" xml:space="preserve">
    <value>Inheritance</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="GeneralizationToolboxTooltip" xml:space="preserve">
    <value>Create an inheritance relationship between two entities</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="CommentToolboxItem" xml:space="preserve">
    <value>Comment</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="CommentToolboxTooltip" xml:space="preserve">
    <value>Create a comment on this diagram</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="CommentLinkToolboxItem" xml:space="preserve">
    <value>Comment Link</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="CommentLinkToolboxTooltip" xml:space="preserve">
    <value>Link a comment to an element</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="EnumerationToolboxItem" xml:space="preserve">
    <value>Enum</value>
    <comment>Toolbox item name</comment>
  </data>
  <data name="EnumerationToolboxTooltip" xml:space="preserve">
    <value>Creates an enumeration</value>
    <comment>Toolbox tooltip text</comment>
  </data>
  <data name="UnresolvedToolboxItem" xml:space="preserve">
    <value>ToolboxItem {0} was not found</value>
    <comment>Invalid toolId</comment>
  </data>
  <data name="UnsupportedToolboxFormat" xml:space="preserve">
    <value>Unsupported toolbox format: {0}</value>
    <comment>Unsupported format Id</comment>
  </data>
  <data name="UnrecognizedElementType" xml:space="preserve">
    <value>ElementType {0} is not recognized as a type of domain class which belongs to this domain model.</value>
    <comment>Incorrect ElementType passed in to Model.CreateElement method</comment>
  </data>
  <data name="UnrecognizedElementLinkType" xml:space="preserve">
    <value>ElementLinkType {0} is not recognized as a type of domain relationship which belongs to this domain model.</value>
    <comment>Incorrect ElementLinkType passed in to Model.CreateElementLink method</comment>
  </data>
  <data name="AmbiguousSchema" xml:space="preserve">
    <value>More than one schema found for target namespace &apos;{0}&apos;, use the first one at &apos;{1}&apos;.</value>
    <comment>Serialization Warning: AmbiguousSchema</comment>
  </data>
  <data name="ExpectingFullFormRelationship" xml:space="preserve">
    <value>Element &apos;{0}&apos; is treated as the target role-player of a relationship &apos;{1}&apos; instance, which should be serialized in full-form.</value>
    <comment>Serialization Warning: ExpectingFullFormRelationship</comment>
  </data>
  <data name="ExpectingShortFormRelationship" xml:space="preserve">
    <value>Instances of relationship &apos;{0}&apos; should be serialized in short-form.</value>
    <comment>Serialization Warning: ExpectingShortFormRelationship</comment>
  </data>
  <data name="IgnoredPropertyValue" xml:space="preserve">
    <value>Invalid property value &apos;{0}&apos; for property &apos;{1}&apos; with type &apos;{2}&apos;, ignored.</value>
    <comment>Serialization Warning: IgnoredPropertyValue</comment>
  </data>
  <data name="MissingId" xml:space="preserve">
    <value>Missing &apos;Id&apos; attribute, a new Guid &apos;{0}&apos; is auto-generated.</value>
    <comment>Serialization Warning: MissingId</comment>
  </data>
  <data name="MonikerResolvedToDuplicateLink" xml:space="preserve">
    <value>Resolving moniker &apos;{0}&apos; causes a duplicate link to be created, so the link and the moniker are ignored.</value>
    <comment>Serialization Warning: MonikerResolvedToDuplicateLink</comment>
  </data>
  <data name="NoSchema" xml:space="preserve">
    <value>Cannot find a schema that defines target namespace &apos;{0}&apos;, schema validation skipped.</value>
    <comment>Serialization Warning: NoSchema</comment>
  </data>
  <data name="UnexpectedXmlElement" xml:space="preserve">
    <value>Unexpected XML element &apos;{0}&apos;, ignored.</value>
    <comment>Serialization Warning: UnexpectedXmlElement</comment>
  </data>
  <data name="AmbiguousMoniker" xml:space="preserve">
    <value>Ambiguous moniker &apos;{0}&apos; encountered. It is used for both &apos;{1}&apos; and &apos;{2}&apos;.</value>
    <comment>Serialization Error: AmbiguousMoniker</comment>
  </data>
  <data name="CannotMonikerizeElement" xml:space="preserve">
    <value>Instances of DomainClass &apos;{0}&apos; cannot be serialized as a moniker.
A DomainClass can be serialized as a moniker only if 
1) it has a defined/inherited DomainProperty marked as IsMonikerKey=true, or 
2) it is marked/inherited with SerializeId=true.</value>
    <comment>Serialization Error: CannotMonikerizeElement</comment>
  </data>
  <data name="CannotOpenDocument" xml:space="preserve">
    <value>Error encountered, check Error List window for details.</value>
    <comment>Serialization Error: CannotOpenDocument</comment>
  </data>
  <data name="CannotSaveDocument" xml:space="preserve">
    <value>Error encountered, check Error List window for details.</value>
    <comment>Serialization Error: CannotSaveDocument</comment>
  </data>
  <data name="DanglingRelationship" xml:space="preserve">
    <value>Relationship &apos;{0}&apos; instance is missing target role-player.</value>
    <comment>Serialization Error: DanglingRelationship</comment>
  </data>
  <data name="InvalidPropertyValue" xml:space="preserve">
    <value>Invalid property value &apos;{0}&apos; for property &apos;{1}&apos; with type &apos;{2}&apos;.</value>
    <comment>Serialization Error: InvalidPropertyValue</comment>
  </data>
  <data name="MissingMoniker" xml:space="preserve">
    <value>Missing moniker. A moniker is expected in attribute &apos;{0}&apos;.</value>
    <comment>Serialization Error: MissingMoniker</comment>
  </data>
  <data name="MissingTransaction" xml:space="preserve">
    <value>This must be called within the context of an active transaction.</value>
    <comment>Serialization Error: MissingTransaction</comment>
  </data>
  <data name="UnresolvedMoniker" xml:space="preserve">
    <value>Cannot resolve moniker &apos;{0}&apos;.</value>
    <comment>Serialization Error: UnresolvedMoniker</comment>
  </data>
  <data name="VersionMismatch" xml:space="preserve">
    <value>Unsupported version &apos;{0}&apos;, can only support &apos;{1}&apos;.</value>
    <comment>Serialization Error: VersionMismatch</comment>
  </data>
  <data name="CannotCloseExistingDiagramDocument" xml:space="preserve">
    <value>Diagram file &apos;{0}&apos; cannot be closed.</value>
    <comment>User cancel closing diagram file. Hence, the DSL model file cannot be opened</comment>
  </data>
  <data name="BindingErrorOccurred" xml:space="preserve">
    <value>Extensions for this designer may not be found as a MEF binding error has occurred. The error that occurred was:
{0}</value>
    <comment>MEF binding error occurred - exception message being logged in the error window so the user is aware.</comment>
  </data>
  <data name="InvalidSaveRootElementType" xml:space="preserve">
    <value>&apos;{0}&apos; is not a valid root element type.</value>
    <comment>Exception message used if an invalid root element type is passed to IDomainModelSerializer.SaveModel / SaveModelAndDiagram</comment>
  </data>
  <data name="InvalidSaveDiagramType" xml:space="preserve">
    <value>&apos;{0}&apos; is not a valid diagram type.</value>
    <comment>Exception message used if an invalid diagram type is passed to IDomainModelSerializer.SaveModelAndDiagram</comment>
  </data>
  <data name="MinimumMultiplicityMissingLink" xml:space="preserve">
    <value>{0} {1} has no {2}.</value>
    <comment>Multiplicity underflow validation.</comment>
  </data>
  <data name="SaveOperationCancelled" xml:space="preserve">
    <value>Save operation cancelled.</value>
    <comment>Message when save is cancelled on validation errors</comment>
  </data>
  <data name="SaveValidationFailed" xml:space="preserve">
    <value>There were validation errors, continue save?</value>
    <comment>Message when validation errors are found on save</comment>
  </data>
  <data name="UnloadableSaveValidationFailed" xml:space="preserve">
    <value>There were validation errors. Continuing to save may cause the file to become unloadable, do you want to continue?</value>
    <comment>Message when validation errors are found on save that will cause file to become unloadable</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ClassShapeEntityGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\EntityGlyph.bmp;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeAbstractEntityGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\AbstractEntityGlyph.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeWarningGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Warning.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeTransientGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\TransientClass.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeNoGenGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\No.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeDictionaryGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Dictionary_16x.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeSQLGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\SQL.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ClassShapeInterfaceDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Interface.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="EnumShapeEnumGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Enumerator_16x.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="EnumShapeWarningGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Warning.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="EnumShapeNoGenGlyphDefaultImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\No.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Icon decorator default image</comment>
  </data>
  <data name="ModelClassExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\EntityGlyph.bmp;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ModelEnumExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Enumerator_16x.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ModelAttributeExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\Attribute.bmp;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ModelEnumValueExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\EnumItem_16x.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="CommentExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\CommentTool.bmp;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ModelDiagramDataExplorerImage" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\ShowDiagramPane_16x.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="ModelClassToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\EntityGlyph.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="UnidirectionalAssociationToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\UnidirectionTool.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="BidirectionalAssociationToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\AssociationTool.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="GeneralizationToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\resources\generalizationtool.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="CommentToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\resources\commenttool.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="CommentLinkToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\resources\commentlinktool.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
  <data name="EnumerationToolboxBitmap" type="System.Resources.ResXFileRef, System.Windows.Forms" xml:space="preserve">
    <value>..\Resources\EnumTool.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment>Toolbox item image</comment>
  </data>
</root>



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v3.0.7.2
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Ex5_Store
{
   public partial class Open
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Open()
      {
         Agents = new System.Collections.Generic.HashSet<global::Ex5_Store.Agent>();
         Viewings = new System.Collections.Generic.HashSet<global::Ex5_Store.Viewing>();

         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Open CreateOpenUnsafe()
      {
         return new Open();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="address"></param>
      public Open(global::Ex5_Store.Address address)
      {
         if (address == null) throw new ArgumentNullException(nameof(address));
         this.Address = address;
         address.Opens.Add(this);

         Agents = new System.Collections.Generic.HashSet<global::Ex5_Store.Agent>();
         Viewings = new System.Collections.Generic.HashSet<global::Ex5_Store.Viewing>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="address"></param>
      public static Open Create(global::Ex5_Store.Address address)
      {
         return new Open(address);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long OpenId { get; set; }

      public DateTime? StartTime { get; set; }

      public int? Duration { get; set; }

      public string WelcomeMessage { get; set; }

      /// <summary>
      /// Max length = 125
      /// </summary>
      [MaxLength(125)]
      [StringLength(125)]
      public string Sync { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      public virtual ICollection<global::Ex5_Store.Agent> Agents { get; private set; }

      public virtual ICollection<global::Ex5_Store.Viewing> Viewings { get; private set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Ex5_Store.Address Address { get; set; }

   }
}

